{"version":3,"mappings":"AAsBA,YACA,gBAIAA,oDACAC,mDACAC,gDAEAC,4CACAC,sBACAC,4DACAC,gDACA,IACAF,oCACA,YACAA,oBACA,CACAG,qDACA,+CACAA,iBACAA,kBACAC,oCAEA,EACAC,iEACA,kCACAC,iBAEA,EACA,EAGAH,sCAGAA,qBAGAA,iBAOAA,iDACAI,oBACAA,uCACAA,4CACA,oEACA,GACAC,2BACAD,+BACAJ,sBACA,GACAJ,gBACA,EACA,GAGAD,8CACAK,6BAEAJ,gBAEA,EACA,KAEAU,wCCvEAA,uCACA,SACA,iBACA,4BACA,eACA,iBACA,WACA,iFACA,aAsBA,6BACAC,WACAC,8BAmBA,MAjBAC,+CACAC,qCACAX,gBAEAS,yBACAD,4BAIAE,4CACAD,sBACAT,sDAEA,GAEAQ,oDACA,GACAA,MACA,IA1CAI,4DACAC,sEACAC,8DACAC,gEACAC,cACAL,aACAX,kBACA,GACAW,eACAX,6BACA,GACAW,eACAX,uCACA,GAkCA,mBAIAiB,0BACAC,qCACAC,gCACAC,8BACAC,WACAC,sCACA,GAEAC,cACAC,2CACAC,oCACAjB,wBAEAiB,oFACA,sCACAxB,kGAGAyB,8CACAC,oBACAR,wBACA,GACAS,oBACAL,0BACA,EAEA,GACAM,gCACAZ,OACA,CACA,gBACA,GC9FAV,sEACA,aAgBA,mCACA,qEACA,CAqWA,+BACA,0BACA,CAOA,qCACA,wCACA,CAQA,sDACAuB,YACAC,oBACAC,wDACA,EACAC,2DAOA,MANAA,UACAH,8CACA,qBACAA,0CAGAA,SACA,CAMA,uBACA,kCACA,mCACA,EACA,CASA,kEAGAI,eAEAC,cAJAC,4BACAC,aAEAC,0BAwDA,MArDAC,uCAIAL,cADA,cADAM,OAEAJ,SACAK,sCACAA,qCAEA,UANAD,OAOAJ,SACAK,kCACAA,iCAEA,cAXAD,OAYAJ,SACAK,sCACAA,qCAEA,eAhBAD,OAiBAJ,SACAK,uCACAA,sCAEA,WArBAD,OAsBAJ,SACAK,mCACAA,kCAEA,UA1BAD,OA2BAJ,SACAK,kCACAA,iCAEA,SA/BAD,OAgCAJ,SACAK,mCACAA,kCAGAA,8BAGAN,iCACAO,oBACAC,6BACA,6BACA,GACAC,UAEAL,oCACAJ,gCAGAD,gCACA,IAteAW,0FACAC,6FACAC,yFACAC,qFACAC,0FACAC,6FACAC,yFAaAC,SACAC,YACAC,kFACAtB,wBACAuB,KACAC,mCACAC,SACAC,aACAC,UACAC,yBACAC,gCACAC,qBACAC,4BACA,EACAC,SACAR,0CACAS,QACAxB,kDACAyB,SACAzB,sDAEAA,uCAEA,EACAmB,sCACAK,QACAxB,4CACAyB,SACAzB,gDAEAA,iCAEA,EACAoB,2CACAI,QACAxB,yCACAyB,SACAzB,6CAEAA,+BAEA,CACA,CACA,EACA0B,YACAb,sFACAtB,uCACAuB,KACAC,mCACAE,aACAC,UACAF,wBACAG,yBACAC,gCACAC,qBACAC,2CACA,EACAC,SACAR,0CACAS,QACAxB,kDACAyB,SACAzB,sDAEAA,uCAEA,EACAgB,sCACAQ,QACAxB,2CACAyB,SACAzB,+CAEAA,gCAEA,EACAmB,sCACAK,QACAxB,4CACAyB,SACAzB,gDAEAA,iCAEA,EACAoB,2CACAI,QACAxB,yCACAyB,SACAzB,6CAEAA,+BAEA,CACA,CACA,EACA2B,UACAd,oFACAtB,qBACAuB,KACAC,aACAC,4BACAC,aACAG,gCACAF,UACAC,yBACAE,qBACAC,yBACA,EACAC,SACAP,sCACAQ,QACAxB,+CACAyB,SACAzB,mDAEAA,oCAEA,EACAmB,sCACAK,QACAxB,4CACAyB,SACAzB,gDAEAA,iCAEA,EACAoB,2CACAI,QACAxB,yCACAyB,SACAzB,6CAEAA,+BAEA,CACA,CACA,EACA4B,UACAf,oFACAtB,qBACAuB,KACAC,yBACAC,qBACAC,yBACAG,gCACAF,UACAC,qBACAE,oBACAC,yBACA,EACAC,SACAR,0CACAS,QACAxB,wCACAyB,SACAzB,4CAEAA,6BAEA,EACAgB,sCACAQ,QACAxB,wCACAyB,SACAzB,4CAEAA,6BAEA,EACAiB,0CACAO,QACAxB,wCACAyB,SACAzB,4CAEAA,6BAEA,EACAoB,2CACAI,QACAxB,wCACAyB,SACAzB,4CAEAA,6BAEA,EACAmB,sCACAK,QACAxB,wCACAyB,SACAzB,4CAEAA,6BAEA,CACA,CACA,EACA6B,WACAhB,oFACAtB,sBACAuB,KACAC,0BACAC,sBACAC,0BACAG,gCACAF,UACAC,SACAE,qBACAC,0BACA,EACAC,SACAR,0CACAS,QACAxB,yCACAyB,SACAzB,6CAEAA,8BAEA,EACAgB,sCACAQ,QACAxB,yCACAyB,SACAzB,6CAEAA,8BAEA,EACAiB,0CACAO,QACAxB,yCACAyB,SACAzB,6CAEAA,8BAEA,EAEAoB,2CACAI,QACAxB,yCACAyB,SACAzB,6CAEAA,+BAEA,CACA,CACA,EACA8B,QACAjB,kFACAtB,mBACAuB,KACAC,uBACAC,2BACAI,gCACAH,aACAC,UACAC,yBACAE,qBACAC,uBACA,EACAC,SACAR,0CACAS,QACAxB,sCACAyB,SACAzB,0CAEAA,2BAEA,EACAgB,sCACAQ,QACAxB,8CACAyB,SACAzB,kDAEAA,mCAEA,EACAmB,sCACAK,QACAxB,4CACAyB,SACAzB,gDAEAA,iCAEA,EACAoB,2CACAI,QACAxB,yCACAyB,SACAzB,6CAEAA,+BAEA,CACA,CACA,EACA+B,YACAlB,sFACAtB,uBACAuB,KACAC,2BACAC,uBACAC,mCACAC,UACAE,cACAD,SACAE,sBACAC,2BACA,EACAC,SACAR,0CACAS,QACAxB,0CACAyB,SACAzB,8CAEAA,+BAEA,EACAgB,sCACAQ,QACAxB,0CACAyB,SACAzB,8CAEAA,+BAEA,EACAiB,0CACAO,QACAxB,kDACAyB,SACAzB,sDAEAA,sCAEA,CACA,CACA,CACA,EAyHA,OACAgC,wCACAC,wBACAC,oBACAC,gCACAC,gCACAC,mGACAC,+FACAC,2FACAC,gGACAC,kGACA,CACA,GCpfA3E,wCACA,0BACA,+BACA,uBACA4E,WACA,aAGA,oBACAC,kCACA,GC7BA7E,qJAKA,+BAEA,4BAMA,MALA8E,iBACAC,sEACAA,8GACAD,iCACA,QACAA,MACA,CAbA,iCACAE,6DACA,8FAiBA,MAJAF,yCACAG,+HACAA,sCACAH,6FACAA,MACA,KCrBA9E,8JACA,iCACAgF,6DACA,uIAYA,MATAF,gGACAC,mEACAA,2GACAD,iCACA,kDACAI,gLACA,6FACAA,oLACA,yBACAJ,MACA,KChBA9E,4JAKA,+BAEA,oCAcA,MAbA8E,gFACAI,gLACA,cACAH,4EACAA,oHACAD,iCACA,yCACAI,4KACA,cACAH,0EACAA,kHACAD,iCACA,uBACAA,MACA,CArBA,iCACAE,6DACA,yIAoCA,MAfAC,yIACAA,sCACAH,uGACAC,uEACAA,+GACAD,iCACA,yEACAC,2EACAA,mHACAD,iCACA,0EACAC,uEACAA,+GACAD,iCACA,gBACAA,MACA,KCrBA9E,kDACA,SACA,SACA,OACA,SACA,eACA,iBACA,WACA,qBACA,aACA,cACA,cACA,qBACA,uBACA,eACA,8BACA,gCACA,6CACA,sDACA,oDACA,cACA,UACAmF,EACAhF,EACA+B,GACAkD,OACAC,QACArE,cACAsE,UACAC,WACAC,eACAC,OACAC,SACAC,gBACAC,kBACAC,iBACAhD,QACAiD,aACAC,SACAC,WACAC,SACAC,OACA,CACA,aAiBA,oCACA,wCACA,OACA1E,cACAC,+EACA,CACA,EACA,CAOA,gCACA,iCACAtB,+DACAA,iEACAA,wDACA,IA9BAgG,4BAEAC,6EACAC,sEACAC,4EAoCA,MAPAf,oBAOA,CAIA7E,0BAIA6F,qDAHAC,qBACAC,2BACAC,2BAEAC,uGACAC,wBACAJ,YACAK,sCACAC,2BACAC,0BACAlG,oCACAC,WACAkG,QACAC,QACA,GAEAjG,mDACAA,oCACA4F,kBACAD,mBACA,GAEAtB,aACAS,2BACAoB,SACAC,eACA,CACA,wBACAC,qBACA,GACAtB,2BACAoB,SACAC,MACA/G,gBACAiH,uBACA,EACAnE,OACA9C,aACAiH,uBACA,CACA,CACA,wBACAC,mBACA,GACA,kBAEA,8BACA,2CACA,CAGA,4DACAC,4BACAC,aA+BA,MA7BAD,mBACAE,WACAD,2BACAE,eACAF,cACArH,mDACAwH,kCACAC,0DACAA,MACAF,yCAEA,GAGAA,wDACA,SACAxF,sFAEAA,6EACA,GAEAwF,qBACAH,iDAEAE,iBACAF,qDAIAA,cACA,CAGA,mBAIA,MAHAhC,oBACAqB,uBAEAQ,4DACAS,2BAEAtB,8DACAuB,2BACAC,SACAC,uCACAC,qCACAjE,4BACA,EAEA8D,4CACAC,0BACAA,sCACAA,kCAGAG,yCAEAA,0BACA1G,cACA,GACA0G,mCACAA,mDAEAC,4BACA,MAEAvB,0BACArB,iBAEA,uBACAvE,0BACA,EACA,CAGA,wDACA,4CACA2E,iBACA9E,gCACAuH,+BACAC,UACAC,uBACAC,sCACAC,6DACAX,sCACA,GACAY,4CACA,GACAxH,qBACAA,yBACAqG,8BACAY,oBACAP,kCACAU,aACA,mBACA3C,8DACAgD,qCACA,uBACAC,cACAjD,8HACAkD,WAEAC,WAEA,EACA,EACA,EACA,CAEAjC,qDACA,wCAEArB,mBAGAuD,oBACAA,mBAGAxB,qFAEAyB,iBADAC,4BAEAD,qDAEA,MADAC,wCACAC,0EACA,GAEAF,uBACA7F,yDAEAwC,wDAEA,uBACA1E,0BACA,mBACAuE,iBACA,EACA,GAEAmD,SAEA,uBACA1H,2BACAuE,iBACA,EACA,CACA,CACA,GCzSAvF,sFACA,aASA,qDACA,oBACAY,mBACAC,oCACAC,WACAC,sCACA,EACA,CACA,GChBAf,mDACA,SACA,OACA,UACA,qBACA,cACA,cACA,YACA,sCACA,eACA,6EACA,aAMA,iCAGAuF,mBAOA,8BAIA7E,0BACAwI,mCACAC,+BACAC,sCACAC,+BACAC,uCACAC,2CACAC,8GACAC,oHACArD,uHACAsD,kHAEAC,yCAGAxI,wCACAyI,8BACArE,mBAEAJ,QACA/E,QACAyJ,MACAC,mBACA,EACAC,gBACAC,YACAC,iBACA1E,iBACA,CACA,2BACAA,kBAEAkC,4BACAyC,SACAxE,4BAEAyD,4BAEAzD,mGAEA,GAEA,EAGAyE,2BACAhJ,gEACA,EAEAgI,MACAlI,gCACAsE,kBACA,GACAtE,+BACAsE,iBACA,GACA6E,WACAhK,eACAsB,QACA2I,oCACAC,qCACAC,qBACA,EACAC,QACAhJ,aACAiJ,aACAjE,6BACA/E,oBACAQ,kBACAkH,0BACA,CACA,GACA3H,UACAiJ,eACAjE,6CACA/E,uBACAQ,kBACAvC,kCACA,CACA,GACA8B,YACAiJ,WACAjE,oDACA/E,4BACAQ,kBACAvC,8BACA,CACA,GACA8B,YACAiJ,cACAjE,6DACA/E,mBACAiJ,cACAzI,2BACA0I,QACAT,4EACAU,cACAC,eACAC,mBACAX,iBACA,CACA,EACA,CACA,GACAjD,UACA1F,YACAiJ,cACAjE,mDACAvE,oBACA0I,QACAC,cACAC,eACAX,2EACAY,mBACAX,YACA,CACA,EACA,CACA,GACAY,cACAC,QACAxJ,eACAC,sBACA,GACAD,cACAC,qBACA,GACAD,gBACAC,sBACA,GACAD,YACAC,kBACA,EACA,UACA,CACA,EAEA,+BACA,GCzKAzB,uDACA,cACA,oBACA,8BACA,aAUA,2EAQAiL,SAPAC,WAiBA,MAfAC,uBACAC,aAEAC,YAEAH,QADAI,aACAC,uFACA,qBACAA,8BAEAC,+BAGAN,sBAGAA,OACA,CAEA,sBACA,GCvDAlL,gKAKA,+BAEA,oCA0BA,MAzBA8E,+DACAI,kRACA,wEACAD,4JACAA,sCACAH,0DACAG,mMACAA,sCACAH,8EACAG,gKACAA,sCACAH,qHACAC,6EACAA,qHACAD,iCACA,sGACAI,8KACA,gCACAH,qEACAA,6GACAD,iCACA,kCACAG,kIACAA,sCACAH,mBACAA,MACA,CACA,+BAEA,qBAKA,MAJAA,kCACAG,yIACAA,sCACAH,6BACAA,MACA,CACA,+BAEA,4BAUA,MATAA,2DACAC,mEACAA,2GACAD,iCACA,oEACAC,sEACAA,8GACAD,iCACA,+DACAA,MACA,CAEA,+BAEA,qBAKA,MAJAA,kCACAG,yIACAA,sCACAH,6BACAA,MACA,CACA,+BAEA,4BAgBA,MAfAA,2DACAC,mEACAA,2GACAD,iCACA,oEACAC,sEACAA,8GACAD,iCACA,wCACAG,sIACAA,sCACAH,yCACAG,sIACAA,sCACAH,gEACAA,MACA,CACA,+BAEA,4BAMA,MALAA,uCACAC,6EACAA,qHACAD,iCACA,UACAA,MACA,CAEA,+BAEA,4BAMA,MALAA,mCACAC,6EACAA,qHACAD,iCACA,WACAA,MACA,CAEA,gCAEA,oCAOA,MANAA,6BACAI,wSACA,2EACAD,0IACAA,sCACAH,wCACAA,MACA,CACA,gCAEA,4BAcA,MAbAA,mDACAC,mEACAA,2GACAD,iCACA,4DACAC,sEACAA,8GACAD,iCACA,yDACAC,uEACAA,+GACAD,iCACA,oDACAA,MACA,CAEA,gCAEA,oCAYA,MAXAA,mEACAC,2EACAA,mHACAD,iCACA,k1BACAC,qEACAA,6GACAD,iCACA,mFACAI,oLACA,6BACAJ,MACA,CAEA,gCAEA,oCAYA,MAXAA,mEACAC,2EACAA,mHACAD,iCACA,8GACAC,qEACAA,6GACAD,iCACA,yFACAI,oLACA,6BACAJ,MACA,CAEA,gCAEA,6BAMA,MALAA,2FACAI,oNACA,mKACAA,0LACA,uEACAJ,MACA,CAEA,gCAEA,6BAIA,MAHAA,yBACAI,sRACA,aACAJ,MACA,CAEA,gCAEA,6BAMA,MALAA,4EACAI,wMACA,8BACAA,kLACA,iBACAJ,MACA,CA1MA,iCACAE,6DACA,iJAyNA,MAfAF,uEACAI,kLACA,MACAH,2EACAA,mHACAD,iCACA,gBACAG,wNACAA,sCACAH,2HACAI,0KACA,sBACAD,oMACAA,sCACAH,iCACAA,MACA,KC1MA9E,4DACA,SACA,SACA,OACA,oBACA,eACA,WACA,+CACA,wDACA,WACA,2EACA,0BAwOAiL,SAhNA,0CACAQ,6CACAC,yCAcA,MAZAvL,uDACAwL,6CACAN,yCACAC,+CAEAK,YACAC,qDAGAA,4FACA,GAEAC,YACAC,0BACA7K,uBAmBA,uBACA,uCACA8K,mBACAC,eACA,CAOA,8BACA,uBAEAC,OACAC,uBACAC,sEACA,GAEAF,qDACAF,mBAEA,CAMA,gCACAK,0BAIA7I,YAIA0G,mBACA1G,0BACA8I,4CACAX,qBACAY,cACAC,YACAC,eA6DA,MA1DArM,8CACA8J,OACA,oBACAqC,iCAGA,GAGAnM,4DAEA8K,WADA,uCACAwB,sDACAC,uGAEAC,iCACA,6CACAf,sDACAgB,wEAIA,GAFAJ,gCAEA,kCAGA,OAFAZ,wDACAA,yDAEA,WACAA,uDACA,MACA,YACAU,wGACAV,oDACA,MACA,aACAU,8LACAV,oDACA,MACA,QACAA,wBAKA,GADAzG,6DACAqH,UACA,mFACArH,8EACA,CAEAoH,mBACA,CACA,GAEAA,OACAM,sBACAC,SAGAC,4CAEAR,IACA,CAOA,yCACA,MAGA,KAFApH,mDACA,uCACA,SAEA,CAEA,kCACA8G,QACAe,4BACAH,cACA3K,8BACA,KAKA,CAKA,wBACAuJ,yCAKAwB,cACA,0CACAC,sEACAC,yBACAlB,0BARAA,oBAUA,CAKA,kBAKAkB,uBACAlB,mBACA,CAKA,iBACAmB,sBACA,MAxLAD,WACAlB,uBACAmB,2CACApB,oCACAe,yCACAM,mEACA,+BACAC,eACAJ,OACAK,aACAC,WACAjK,MACA,EA+NA,GAhDA8I,uBACAe,wEACA,uDACA,eAGAnB,KACAwB,kBACAxM,6BACAkM,cACA,GACAlM,+CACAiM,sBACAC,4BACA,GACAlM,2BACAiM,uCACAC,4BACA,GACAlM,2BACA,mBACAyM,SAGAC,gCACAA,mCACA,uCACAV,cACAW,kBAGA,GACA3M,0CACA4M,yCACAC,6BAEAH,uBAEA,iBACAD,SAEAK,QAEA,GACAC,OACA/G,SACA,GAEA9G,iDACA8N,8BACAC,kDACA,+BACAjN,iBACA,kDACA,mDACA,+CACA,sCACAkN,yCACAA,2BACA,CACA,+CACA,uCACAZ,oCACApI,oDACAiJ,sBACAnN,iBACAd,aACAoN,uCACApI,uDACAiJ,yBACAC,iBAEA,EACA,GACAA,iBAEA,CACA,CACA,GACAC,yBACA,CAEAlB,4BACAH,cACAW,iBACA,GAEAP,gEACAkB,yBACA,uBAIAnB,wBAHAH,cACAW,kBAIA,GAEAd,OACA,GACA7L,wBACA,kBACAuN,qBACAR,gBACA,GACAS,gBACA,CAxUA,iBACArD,QACApJ,kBACA,EAuUA,0BACA,GChXAhC,0JAKA,+BAEA,4BAMA,MALA8E,iBACAC,sEACAA,8GACAD,iCACA,QACAA,MACA,CAbA,iCACAE,6DACA,8FAiBA,MAJAF,yCACAG,+HACAA,sCACAH,6FACAA,MACA,KCrBA9E,4JACA,iCACAgF,6DACA,oDAYA,MATAF,6CACAC,sEACAA,+GACAE,sCACAH,eACAC,sEACAA,+GACAE,sCACAH,kBACAA,MACA,KChBA9E,4JAKA,+BAEA,4BAUA,MATA8E,mCACAC,qEACAA,6GACAD,iCACA,OACAC,sEACAA,8GACAD,iCACA,kBACAA,MACA,CAjBA,iCACAE,6DACA,8FAqBA,MAJAF,6HACAG,iIACAA,sCACAH,sBACAA,MACA,KCzBA9E,iKAKA,+BAEA,4BAaA,MAZA8E,gDACAG,mIACAA,sCACAH,gCACAC,0EACAA,kHACAD,iCACA,OACAC,sEACAA,8GACAD,iCACA,YACAA,MACA,CACA,+BAGA,iBACA,CAzBA,iCACAE,6DACA,0FAyBAC,+HACAA,0BACA,EACA,KCZAjF,uDACA,SACA,SACA,OACA,SACA,iBACA,eACA,aACA,WACA,qBACA,oBACA,cACA,cACA,YACA,qBACA,uBACA,eACA,qBACA,gCACA,oDACA,+CACA,8BACA,kDACA,oDACA,oDACA,SACA,cACA,yDACA,2BACA,eACA,UACA,UACAmF,EACAhF,EACA+B,GACAkD,OACApE,cACA0N,eACAC,aACArJ,UACAC,WACAgG,YACA9F,OACAC,SACAiF,OACAhF,gBACAC,kBACAC,iBACA+I,eACA9I,aACA+I,kBACAC,WACAjM,QACAkM,cACAC,gBACAC,gBACAC,OACAhJ,OACAiJ,qBACAC,sBACA,CACA,aA8BA,gCACA,iCACAjP,+DACAA,kEACA,4BACA,IA9BAgG,iCAEAkJ,8EACAC,oGACAjJ,sEACAkJ,8EACAC,oEACAC,wEACArJ,gEACAsJ,8EACAlP,gEACA,4EAOA,qBAsBA,MAPA+E,oBAOA,CAIA7E,WAUA2I,SACAsG,YACA9H,WACA+H,gBAZAjJ,wFACAkJ,oCACA1G,8BACA1C,2BACA6C,+BACA5C,2BACAoJ,iCACAC,uCACAC,gDAKAC,kBACAC,kBACAC,qBACAC,kBACAC,eACAC,sBAGAC,cAEAC,WAMA/O,MACAgP,gBACAC,eAZAlG,SACAQ,SAEA2F,iBAEAC,iBACAC,8BACAC,oBACAC,YACA,GAKAC,wBACA/O,YACAgP,0BACAC,2CACA/Q,oDAIA8K,WAHAU,yCACA,cACAA,mBACAxG,6DACAA,yCAEA,EACA,EACAgM,aACAJ,YACA,GAEA,kCACAI,aACAJ,YACA,GAEA/P,wDACAA,yCACA2F,mBACA,GAEAb,2BACAoB,SACAC,gBACAlE,WACA7C,iBACAiH,uBACA,EACAnE,OACA9C,aACAiH,uBACA,EACAlE,WACA/C,iBACAiH,uBACA,EACA/D,YACAlD,kBACAiH,uBACA,EACAjE,QACAhD,cACAiH,uBACA,EACAgE,WACAjL,iBACAiH,uBACA,EACA+J,YACAhR,kBACAiH,uBACA,CACA,CACA,kCAEA,gDACA,WACAuC,8BACArE,mBAEA9F,gBACAkI,mBACA,QAEA2B,aACA7J,4BAGAiH,UACAjH,2BAGA4R,sCACAjQ,gBACA8I,SACAxE,4BAEAyD,kCACAA,0BACA,GACA9H,oBACA,GACAmG,cACAE,YAFAH,kBAIAoB,eACAnB,+BACAE,4DACA,qBAEAlG,KACAA,OACA8P,UAGAA,KACAA,KAEA3J,+BAEAA,WACAzF,iGAGA,GAEAwF,qBACAH,mDAEAC,qBACAD,2DAGAvG,2BACA0E,0FACA,GACAtE,gBACAmE,iBACA,GAEA,CAGA,8BACAgM,kFACApQ,kEACA,EACA,CAGA,0BACAoQ,0EACApQ,0DACA,EACA,CAGA,8BACAoQ,kFACApQ,kEACA,EACA,CAGA,+BACAoQ,oFACApQ,oEACA,EACA,CAGA,2BACA4O,UACAwB,iFACApQ,6DACA,EAEA,CAEA,8DACA+G,sCACAsJ,WACAlB,oDACAkB,cACAhQ,gBACAwI,aACAvI,+BACAgJ,YACAgH,SACAxP,SACAqB,qBACA,CACA,GACAoO,6BACAF,cACAhQ,eACAwI,aACAvI,8BACAgJ,YACAgH,SACAxP,SACAkB,oBACA,CACA,GAGA4M,UACAyB,cACAhQ,kBACAwI,YACAvI,gCACAgJ,sBACAgH,SACAxP,SACAmB,iBACA,CACA,GAGAoO,gBACA7G,QACAT,0CACAU,cACAC,eACA2G,eACA,EAEA,CAGA,mCACAG,4CACAC,WACA3I,iBACA,EACAvC,UACAkL,2BAEAtI,aACAsI,+BAEA5Q,kGACAA,qDACA,uBACAA,0BACA,EACA,CAGA,gCACAuQ,iEACA,oBACA7K,UACAjH,wBAEA,0BACA4Q,sBACAA,0BACAA,yBACA5Q,OACA,CACAC,oDACA,EACA,CAEA,sCACAmS,4EACAxF,2BACAxL,kBACAuH,kCACA0J,mDACA1G,QACA2G,sEACAC,2BACA,GAEAnD,kDACA,4EAEA1N,gFACA,EACA,CAGA,wCACA0Q,uDACAI,mDACA7J,4BACA8J,uIACA7F,qBACA,GACA4F,aACA,CACApR,kBACAuH,6BACA0J,iEACA1G,QACA2G,8EACAC,6BACA9B,kBACA7H,oBACA8J,iBACA,EACA,CAEAhS,oCACAkM,qEAGAlM,gCACA,kDACAiS,0DACA/F,8DAEA,GAGAwC,0BACA5N,gBACAE,QACA,aACA8Q,oEACA/E,MACAhL,oBAEA,EACA,CAQA,8BACA,yDACAR,uDACA2Q,qFAEA,6BACA,CACA,QACA,CAQA,kDACA,kCAwCA,MArCAC,cADAnS,mCACAoS,6BAEAA,uBAGAD,mDACA/Q,WACAC,oBACAC,kIACA,EACAC,2DAEAA,SACAH,uDAEA,4BACAA,sDAGA,qBACAA,mHACAA,6CACAG,kDACAQ,8DAGAqQ,sBACAhR,kDACAA,6DACAA,4DACAA,wDACAA,0EACAA,kDACAA,wDACAA,wDACAA,yEAEAA,SACA,CAQA,+BACA,oCACA,CAQA,+CACAiR,sBACAC,uBAeA,MAbAtS,mCAEAuS,iBADAH,oCAEAA,gBACAG,yDACAA,wBACAF,wCAEAC,0CAGA,GAEA,CACAnK,2BACAqK,6BACAlK,mCACAzG,mCACA,CACA,CAUA,gEACA6P,uDACAK,uIACA7F,oDACAxL,kBACAuH,uBACAC,oBACA8J,iBACA,GAEAzB,6CACArE,kDACAA,6CAGAlM,oCACAkM,qEAGAA,+BAGA1G,iDAEAxF,kBACAyS,mDAEA,GAPAlN,6FASA,CAMA,6BACA,wDACA,CAMA,gCACA,YACAoK,aAEA,6BACA+C,4GACAA,yBAGA1J,kCACAA,kCAEA2J,UACA3J,uDAEAA,yDAGA,CAEA,wBACA,8BACA,CAKA,6BACA2G,YACAiD,eAEA,CAMA,kCACAC,aACAC,qBACAC,yBACAC,4BACAC,aACA,EACA,CAMA,uBACA,wEACA,+CACA,CAMA,qCACA,0DACA,oBACA,yBACA,oDACA,wDACAC,iDACAC,uCAEA,CACA,+FACA,CAEA,mDACA,uEACA,CAEA,sDACAC,kBAEAC,wCACA,6BAEArO,mBACA/D,gBACA+H,oCACAlH,gBACA,GACAwR,oBACA,GAEAD,yCACAA,mBACA,CAEA,2BACAA,kBACA,CASA,MAPAlK,cACAsH,mCAEAlK,UACAkK,+BAGAS,wDACAhI,iBACAsG,6BACA9H,2BACAyB,qCACA5C,8BACAuJ,kDACAC,sDACAC,0CACAC,yCACAC,mCACAC,iDACAO,+CACAH,sCAEAgD,kEACAC,+DACAC,iEACAC,yEACAC,uEACAC,qEACAC,+DAEA1K,aACAsH,mCAEAlK,UACAkK,+BAMA/G,iBAEAW,YACAhJ,aACAiJ,aACAjE,6BACA/E,oBACAQ,SACAkH,kCACAA,0BACA,CACA,GAGA2G,aACAtF,YACAhJ,WACAiJ,cACAwJ,kBACAxS,yCACA+E,yCACAvE,SACA8Q,gBACA5J,yBACA,CACA,GACAqB,YACAhJ,SACAiJ,cACAjE,8BACA/E,8BACAQ,SACA8Q,gBACA5J,yBACA,CACA,IAIAqB,YACAhJ,eACAiJ,YACAjE,+BACA/E,sBACAiJ,cACAzI,gBACA,IAEA,sCAEAuI,YACAhJ,WACAiJ,aACAjE,2BACA/E,kBACAiJ,cACAzI,YACA,GAIAuI,YACAhJ,eACAiJ,YACAjE,+BACA/E,sBACAiJ,cACAzI,gBACA,GAEA8N,UAEAvF,YACAhJ,kBACAiJ,sBACAjE,kCACA/E,mBACAiJ,cACAzI,aACA,GAIAmO,mBACA5F,YACAhJ,iBACAgF,yCACAiE,cACAhJ,0BACAiJ,cACAzI,kBACA,GAIAgO,kBACAzF,YACAhJ,kBACAgF,kCACAiE,YACAhJ,iBACAiJ,cACAzI,mBACA,GAIAiO,gBACA1F,YACAhJ,oBACAgF,kCACAiE,YACAhJ,iBACAiJ,cACAzI,qBACA,GAIA+I,YACAxJ,mBACAC,oBACAyS,YACAC,qBACA,+BAIA,MAHAjM,YACAkE,iCAEAA,KACA,CACA,GAGAsH,qBACA1I,YACAxJ,2BACAC,uBACA2S,cACAF,YACAC,qBACA,kEACA,CACA,GAIAR,oBACA3I,YACAxJ,0BACAC,sBACA2S,cACAF,YACAC,qBACA,iEACA,CACA,GAIAhU,wCACA6K,YACAxJ,iBACAC,uBACA2S,iCACAF,YACAG,gCACAF,qBACA,+DACA,CACA,EACA,GAGAnJ,YACAxJ,gBACA0S,YACAzS,uBACA2S,cACAD,iBACA,mCACA,EACAG,0BACAC,qDACAC,wBACArM,eAEAsM,qBACAC,iCAOA,MANAD,uBACAtM,iDACAA,cACAA,4DAGAA,MACA,EACAwM,cACAC,+GACAC,kBACAC,0CACAP,iDACAQ,4BAGAD,0CAEArE,iBACAA,0BAGAA,iDACAuE,mBACAxJ,qBACAyJ,oBACA,GACAhU,sBACA,wCACA,sBACAkI,yBAEA,GACAlI,sBACAkI,yBACA,EACA,CACA,CACA,GAGA6B,YACAxJ,YACAC,mBACAyS,YACAE,cACAO,cACAC,6BACAC,4BACA,EAEAV,qBACA,GACAzS,QADAyG,UAeA,MAZA+M,oCACAxT,iDACAA,SACAyG,oBACA+M,sCACA/M,qBAEAA,yBACAwI,6BAIAxI,MACA,CACA,GAGAyL,qBACA5I,YACAxJ,iBACAC,sBACAuI,eACA9C,UACA1F,eACAiJ,YACAjE,8BACA2O,WACA,8BACA,EACAlT,gBACA,EACA,IAGA,sCAEA+I,YACAxJ,aACAC,kBACAuI,eACA9C,UACA1F,WACAiJ,aACAjE,0BACA2O,WACA,0BACA,EACAlT,YACA,EACA,GAIA4R,yBACA7I,YACAxJ,oBACA0S,YACAkB,mBACA3T,sBACA0S,wBACAkB,6CACAC,mGACA3J,oCAwBA,OAvBAA,oCACA,cACA0J,iDACAA,wCAEA1J,aAEAA,WACA0J,iDACA1J,uCAEA2J,4CAEAA,gBAGAA,mCACAxE,mBACAnF,oBACA4J,4BACA,IAGAD,YACA,CACA,GAEArF,kBACAjF,YACAxJ,eACAC,uBACAuI,eACA9C,UACA1F,kBACAgF,kCACAiE,YACAxI,oBACAuT,SACA,wEACA,0CACA,CACA,EACA,GAEAtF,gBACAlF,YACAxJ,gBACAC,wBACAuI,eACA9C,UACA1F,kBACAgF,kCACAiE,YACAxI,sBACAkT,WACA,gCACA,CACA,EACA,GAEArB,wBACA9I,YACAxJ,kBACAC,yBACA0S,kCAYAlJ,cAXAiC,UACA4D,yCACA,4CAWA,MATA2E,eACAvI,uDAEA7B,WACA6B,+DAEAwI,cACAxI,uGAEAA,oBACA,CACA,GAGAiD,qBAEAnF,YACAxJ,kBACA0S,YACAzS,yBACA0S,2BACAe,8CACAA,sCAEA,EACA,CACA,GAIAlK,YACAxJ,cACAC,qBACA0S,qBACA,6CACA,CACA,GAEA1S,sBACAsO,UACAtO,uCACA6O,wBACA7O,oDAEA6O,wBACA7O,kCAIA+O,aACAhP,0CACAiJ,sBACAjE,YACA2O,YACAlT,2CACA,GAEA8R,uBACAvD,iBACAhP,aACAiJ,eACAjE,8CACAvE,kBACA,GAGAmO,mBACAI,iBACAhP,iBACAgF,yCACAiE,cACAxI,kBACA,GAGA+I,YACAxJ,sBACAC,2BACAuI,eACA9C,kBACA,GAGAiC,MACAlI,gDACAsE,mBACAoL,iBAEA,sDAEAgF,oBACAC,6CAEA,GACA3U,wCAEA2O,wBACAe,gBACA,GACA1P,2CACA4U,iBACAA,kCACA5M,yHACAA,qHACA,GAEA,cAGAI,mBAGAlE,uEACA0I,aACAjG,mEACAM,gCAEAoI,qDACAoB,6BACA3B,WAEAlC,wBAEA,GAGA0C,iBACAtN,gEACAC,wDACAC,gEACAC,+DACA,GAEA0M,aACAgD,kCACAA,gDACAC,wBAGA5J,+CACA5D,kBAEAvE,cACA8U,sBACA7U,+BACA+P,cACA,GAEA7H,qEACA4M,+CACAC,4CAEAA,6BACAD,8BACA,GAEA/E,gBACAF,cACA,GACA7P,iCAEAsP,kCACA1C,WACA,GACA1N,kDACA,8BACA,uBACA,oCACA,+CACAoQ,0CACA7O,iCACAmM,WAEA,EACA,EACA,wCACA7M,0BACA,cACAZ,iDACAsB,QACA2I,wBACAC,YACA,uHACA,EACAC,qBACA,EACA0L,gCACAC,0BACAC,sEACAC,6EACAC,UACA7L,YACAQ,YACAD,cACAuL,iBACAC,oBACAC,mBACA,WAEAC,mBACA,EACA,uBACAzV,2BACAuE,iBACA,EACA,CACA,CACA,GCxzCAvF,uDACA,SACA,OACA,UACA,qBACA,cACA,cACA,sCACA,eACA,sEACA,aAMA,oCAGAuF,mBAOA,+BAIA7E,0BACAwI,sCACAC,+BACAC,sCACAC,+BACAC,uCACAC,2CACAnD,wHACAoD,oHACAkN,2GAEA/M,yCAGAgN,2BACA/M,8BACArE,mBAEAJ,QACA/E,cACAyJ,MACAC,mBACA,EACAC,gBACAC,YACAC,iBACA1E,iBACA,CACA,2BACAA,kBAEAkC,4BACA/B,sDACAhG,iCAEAgG,mGAEA,GAEA,EAEAyD,MACAlI,gCACAsE,kBACA,GACAtE,6CACAsE,iBACA,GACA6E,WACAhK,eACAsB,QACA2I,+CACAC,sCACAC,qBACA,EACAC,QACAhJ,UACAiJ,YACAjE,0CACA/E,iBACAQ,kBACAvC,+BACA,CACA,GACA8B,aACAiJ,aACAjE,6BACA/E,oBACAQ,kBACAkH,0BACA,CACA,GACA3H,YACAiJ,WACAjE,2DACA/E,4CACAiJ,cACAzI,2BACA0U,iBACA,CACA,GACAzP,UACA1F,YACAiJ,WACAjE,iDACAvE,oBACA0U,YACA,CACA,GACA5L,cACAC,QACAxJ,eACAC,sBACA,GACAD,cACAC,qBACA,GACAD,gBACAC,sBACA,EACA,UACA,CACA,EAEA,gCACA,GC1JAzB,0KACA,iCACAgF,6DACA,2FAQA,MALAF,6CACAC,wEACAA,gHACAD,iCACA,gDACAA,MACA,KCZA9E,iLAKA,+BAEA,6BAIA,MAHA8E,iLACAI,kLACA,uCACAJ,MACA,CAXA,iCACAE,6DACA,iJAqBA,MAVAF,kDACAG,oIACAA,sCACAH,yEACAC,mEACAA,2GACAD,iCACA,6HACAI,oLACA,0CACAJ,MACA,KCzBA9E,6KACA,iCACAgF,6DACA,uIAYA,MATAF,oJACAC,sEACAA,8GACAD,iCACA,iEACAI,8MACA,MACAA,wPACA,yFACAJ,MACA,KCGA9E,2DACA,SACA,SACA,OACA,UACA,qBACA,kBACA,eACA,yDACA,oBACA,kEACA,yEACA,qEACA,iBACA,eACA,6JACA,kBAMA4W,sBAMAzQ,mCAOA0Q,2BAIAnW,kCACAwI,wBACA4N,2HACAC,qCACAC,2BAEA9N,0EACAA,WACA+N,+BACAC,yFAEArH,mDACAsH,8CACA,4BAEAC,kBACA7R,mBAGAJ,+BACAgD,eAMAA,mBACAkP,kBACAC,mBACA5X,qCAEA6X,4CAVApP,eACAoP,iCAEAA,2CASA,EACA,EAEAC,eACA,mEACA,CAKA5T,gBACAiM,2EACAtK,kBACA2D,sFAGAiO,+CACAA,uCACA,EAKAM,UACA/X,qCACA,EAGAyX,4CACAA,wCAGAO,0BAEAnS,qBAEA2D,wCACAyO,cACAzV,6CACA,WACAxC,qCACA,EAEA,GAEAwJ,uCACA8N,sCACAW,cACAzV,6CACA,WACAxC,qCACA,EAGA,GAEAwJ,yCACAsO,cACAJ,iBAIA,EAEAlO,wCACA8N,sCACAQ,cACAJ,iBAKA,EAEApG,SACA/O,kBACA,yBAEAkD,+BACA,YAEAgD,eAQAA,oBACAyP,QAEAhU,eAVAgU,QAEAzP,eACAoP,iCAEAA,6CAQAK,KACAC,eAEAA,eAEA,EACA,EACA1G,wBACAJ,YACA,GAEA+G,MACA,CACA,EAEA,gCACA,GCzLA9X,sDACA,SACA,SACA,OACA,WACA,WACA,cACA,yBACA,oCACA,+EACA,aAOA,OAIAU,uBAUA,kCACAqL,wBACAA,gEACA,CAEA,uBACA5G,uCACAyC,+BACA,GACA,IAXAmQ,oBANAC,mCACAC,gCACAC,oCACAC,+BACAC,sCACAC,iCAcAC,wBAEAP,8CACA/N,YACAS,cACAjE,kCACA/E,mBACA8W,oBACAC,qCACAC,gDACA,6BACA,EACAC,oCACA,kCACAvQ,aACAA,oBACAhI,wCACAgI,oCACAA,iCACAA,qCACAA,iDACAzC,0DACAiT,8DAEA,+DAGA,4BACAA,aACA,4BAEAjT,qBACA,+CAGA0S,4EACA,CAEA,CACA,GC/EApY,uDACA,SACA,SACA,OACA,eACA,eACA,4BACA,aAiBA,gCAIA,MAHAG,sBACAyY,gCAEAA,OACA,CAaA,6CACAnN,6CAGAoN,cAKAnQ,iCACA,aAEA,qBACAoQ,2BACArZ,QACAqZ,8BACArZ,aACA,GAEAqZ,+BAEArZ,SACAgM,oDAGA,CACA,EAEA,+BACAxK,0BACAkM,WACA3C,QACAhJ,aACAiJ,aACAjE,6BACA/E,oBACAQ,kBACAkL,cACA,CACA,GACA,kBACAlM,gCACAkM,uBACA,GACAlM,+BACAkM,sBACA,GACAlM,qCACAkM,yBACA,GACA/C,WACAhK,uBACAX,yBACA8W,yBACAD,+BACA5U,QACA2I,mCACAC,kCACAC,qBACA,EACAQ,0EACAP,yCACAQ,QACAxJ,UACAC,iBACAyS,WACA,GACA1S,UACAC,iBACAyS,WACA,GACA1S,WACAC,kBACAyS,WACA,GACA1S,WACAC,kBACAyS,WACA,GACA1S,aACAC,oBACA0S,uBACA,GACA3S,aACAC,oBACA0S,uBACA,EACA,OACA,GACA1F,gBACA,CAtHA,eACAsK,mBACAC,gBACA,EAqHA,0BACA,GC1JAhZ,sJAKA,+BAEA,4BAMA,MALA8E,iBACAC,sEACAA,8GACAD,iCACA,QACAA,MACA,CAbA,iCACAE,6DACA,8FAiBA,MAJAF,yCACAG,+HACAA,sCACAH,6FACAA,MACA,KCFA9E,qDACA,SACA,OACA,WACA,iBACA,qBACA,eACA,YACA,yBACA,cACA,cACA,gCACA,+CACA,8CACA,SACA,eACA,UACAG,EACA+B,GACAoD,UACAtE,cACAuE,WACAM,iBACAoT,cACAC,iBACAzT,OACAS,OACAJ,aACAqT,oBACApT,SACAmJ,OACA,CACA,gBAMA/I,6BAEAC,yEACAE,mEAUA,MAPAf,oBAOA,CAIA7E,uBAcA,6CACA,eACA,+CACA,wBACA,sCAEA,CACA,WACA,IArBAiG,gFACAyS,mDACA1S,mFACA4C,wFACA+P,mEACA3P,+FACA6K,oDAiBAvT,cACAC,0CACAyI,mBACA,GACAzI,+BACAD,8BACA2F,mBACA,GAEAb,2BACAoB,SACAC,eACA,CACA,+BACA,wGACAmS,sCACAT,kCACArO,QACAhJ,0BACAiJ,8BACAjE,mDACA/E,iCACAQ,kBACA,uEAEA4W,qEACAU,8EACAV,sBACA,CACA,GACApZ,uFACA+Z,oBACAT,mBACAC,wBACA,YACA/X,wBACAsE,kBACA,GACAtE,uBACAsE,iBACA,GACAtE,yBACAD,0BACA,GACAsN,gCAMA,MAJAzE,sBACAH,kCAGA,qCACAwP,2CACAO,aACAC,SACA,EACAC,aACAD,UACAjY,mBACA+E,wCACA,EACAoT,aACA5E,aACAxJ,kBACAqO,OACAzN,uBACA0N,kBACA,CACA,EACAC,WACA/E,aACAxJ,kBACAqO,OACAzN,qBACA0N,gBACA,CACA,CACA,GACA7Y,oBACAA,mBACAA,6BAEA4X,sBACAmB,qDACAC,gDACA,EACA,EACA,GACA7Y,gBAEA6X,eACAzX,UACAwI,YACAvI,6BACAV,kBACAF,iCACA,yBACA6I,cACA1I,kDAEAkZ,cAEA,EACA,EACA,EACA,uBACAlZ,2BACAuE,iBACA,EACA,CACA,CACA,GAEAvF,MCnNA,oCACA,WACA,SACA,oCACA,CACA,EACA,cACA,SACA,qCACA,CACA,EACA,mBACA,SACA,iCACA,CACA,EACA,SACA,SACA,sCACA,CACA,EACA,OACA,YACA,SACA,wDACA,CACA,CACA,GC1BAA,wLACA,iCACAgF,6DACA,2FAwBA,MArBAF,8BACAC,qEACAA,6GACAD,iCACA,sEACAC,0EACAA,kHACAD,iCACA,qBACAC,sEACAA,8GACAD,iCACA,sEACAC,qEACAA,6GACAD,iCACA,wBACAC,sEACAA,8GACAD,iCACA,sBACAA,MACA,KC5BA9E,mLAKA,+BAEA,qBAKA,MAJA8E,kBACAG,yHACAA,sCACAH,iBACAA,MACA,CAZA,iCACAE,+GACA,+BAgBA,MAJAF,uBACAG,gHACAA,sCACAH,mBACAA,MACA,KCHA9E,+EACA,SACA,SACA,OACA,eACA,aACA,gFACA,2EACA,6DACA,aAqCA,qCAGA,MAFAqM,mBAEAR,WAQAsO,6BACA,kBAGA,oBAFAha,2BAEA,YACA,2CACAgF,8DACAiV,sCAGA,CACA,aAEAtO,0BAEA2C,YACA,CAzDA,eACA4L,gBACA1T,4BACAlF,4BACA6Y,OACA7P,aACA2B,OACA,EACAmO,kBACA5T,+BACAlF,+BACA6Y,OACA7P,cACA2B,OACA,CACA,EA4CA,MA1CAoO,iEA0CAC,mBACA,GC7FAza,6MACA,iCACAgF,6DACA,oFAkCA,MA/BAF,4IACAI,4NACA,iEACAA,gOACA,oBACAA,4NACA,6JACAA,+NACA,iEACAA,mOACA,oBACAA,+NACA,6JACAA,6NACA,iEACAA,iOACA,oBACAA,6NACA,iKACAA,+NACA,iEACAA,mOACA,oBACAA,+NACA,8JACAA,2NACA,iEACAA,+NACA,oBACAA,2NACA,wCACAJ,MACA,KCrBA9E,yGACA,SACA,SACA,OACA,eACA,qGACA,gCACA,aA0DA,kDAGA,MAFAqM,mBAEAR,WAWAsO,6BAEAha,sCAGAA,6CACAgF,uCACAiV,eACA,OACA,CACA,aAEAtO,iBAEA2C,YACA,CAhFA,eACAiM,aACA7W,UACA8C,iCACAlF,qBACA2K,OACA,EACAxI,YACA+C,mDACAlF,uBACA2K,OACA,EACAuO,SACAhU,gCACAlF,sCACA2K,OACA,EACAnE,YACAtB,oCACAlF,wBACA2K,OACA,EACApI,QACA2C,+BACAlF,mBACA2K,OACA,CACA,CACA,EAsDA,uCACA,GClHApM,qKAMA,MALA,kCACAgF,6DAIA,kJACA,KCaAhF,mEACA,SACA,SACA,OACA,eACA,WACA,KACA,6DACA,eACA,iEACA,aA+CA,0DACA4a,cACAC,sBACA,gCACA,6BACA,2BACA,sBACA,UACA,GAEAA,+BACAA,sBACA,kDACA,+CACA,6CACA,wCACA,YACA,EACA,CAUA,yCAEAC,OACAD,iBACAE,aACA/J,QAJAvF,wCAKAuP,eAKAtS,oCACAoS,QACArP,4CAEAqP,mFACAA,mBACAG,0CACA,GACAH,wCAEA,CACA,EAEA,gCACA7Z,uBACA6Z,0CACArP,yBACAsP,iCACA5V,qDACA0V,+DAEApP,2BACAyP,+DAGAlK,wBACA/O,kBACA6Y,wCACArP,2BACAyP,8DAEA,EACA/J,gCACAJ,YACA,GAEA,GACA9P,wBACA+P,SACAA,cAEA,GACAvC,gBACA,CA1HA,eACA0M,cACAC,kBACAC,YACAT,YACA,EACAU,aACAC,SACAC,SACAC,OACA,EACA5R,MACAoR,SACAS,4BACAC,gBACA3R,UACA,EACA4R,MACAX,GACAjR,kBACA6R,MACArQ,cACA,EACA/J,OACAqa,wBACA,CACA,EACAC,GACAta,OACAqa,cACA,CACA,CACA,CACA,CACA,EA0FA,2BACA,GCjJA9b,mFACA,SACA,OACA,WACA,eACA,cACA,eACA,qCACA,aAyEA,uCAGA,MAFAqM,mBAEAR,WAIAsO,yBACA,oCACA,CACA,aAEAlZ,uBACA,6CACAb,gEACAiW,UACArL,wBACAgR,6BACAC,kCACAC,QACAnR,cACAuL,gBACAC,cACA,oBACA,GACA9H,YACA,CA5FA,eACAzD,OACA,CACAxJ,WACAC,qBACAyS,WACA,EACA,CACA1S,kBACAC,qBACAyS,YACAC,kDACA,EACA,CACA3S,oBACAC,uBACAyS,YACAC,kDACA,EACA,CACA3S,gBACAC,mBACAyS,YACAC,kDACA,EACA,CACA3S,gBACAC,mBACAyS,YACAC,kDACA,EACA,CACA3S,oBACAC,uBACAyS,YACAC,kDACA,EACA,CACA3S,kBACAC,qBACAyS,YACAC,kDACA,EACA,CACA3S,kBACAC,qBACAyS,YACAC,kDACA,EACA,CACA3S,qBACAC,wBACAyS,YACAC,0BACA,mCACA,CACA,EAEA,EAoCA,4BACA,GC3GAnU,4DACA,SACA,KACA,SACA,OACA,UACA,WACA,4BACA,eACA,cACA,uBACA,qBACA,uEACA,iGACA,2DACA,2EACA,UACAmF,EACAgX,GACAhc,EACA+B,GACA8C,QACA5E,IACAe,QACA6P,QACAtL,SACAE,kBACAD,gBACA8U,oBACA2B,iCACAC,qBACAC,sBACA,CACA,aAIA,yBACAnb,QACAf,2DACA,gBACA,OACA,CACAgB,oBACA4D,iBACAU,gCACA,GACArE,oBACA2D,iBACAU,6BACA,EACA,CAhBA,mLAkBA,OACAhF,oBAEAsa,eACAuB,sCACAC,wCACAnQ,OACAoQ,0BACAC,eACAC,sBACAC,KACAC,aATA3T,oCAWAmD,iCACAkQ,4FACAC,gGAGAK,6DACAvO,uCAGAmO,6DACAnO,6CAGA0M,oCACAG,oGACAC,kBACAE,aACAwB,0DACAjT,MACAzJ,iEACA,EACAwb,MACAX,GACAxZ,OACA2Y,gBACA,CACA,EACA2B,GACAta,OACA2Y,0BACA,EACAyB,4BACA,CACA,EACAkB,SACAvR,QACAsO,gBACA,sBACA,CACA,CACA,EACAkD,QACAC,OACA,CACA,CACA,GACA3O,SAEAnJ,4CACAlE,uBACA,2BACA+Z,uBACAM,aACAzR,MACAzJ,qFACA,EACAwb,MACAX,GACAY,MACArQ,uCACA,EACA/J,OACA2Y,4CACA,CACA,CACA,CACA,CACA,EACA,GAGAsC,uCACApO,+BAGAsO,cACA3a,kBACAd,qEACAC,oBACA,cACAyI,gCACA1J,iDACA+c,kDACA,EACA,CAEAL,4BAEAJ,kCACA5Y,iDACAD,qEACA+W,qDACA1S,sDACAjE,4CACA,GACA0Y,uBACA,GACArb,oBACAqE,8BACAkX,WACA,EACA,CACA,GACA9E,OACAF,OAEA2E,wCACAK,wDACAA,cAKAD,0FAEAxX,0BACAlE,sBACA0E,iBACA9E,+DACAuH,oBACAC,UACAI,oBACA0J,kBACA5J,iEACA,GACAtH,yBACAkc,eACA,EACA,EACA,CACA,CACA,GCtMAnd,6CACA,SACA,SACA,cACA,eACA,WACA,kCACA,aA4CA,kCAgBA,MAfAod,kBACAA,oDACAjY,QACA/E,wDACA4J,YACAD,eACA,GACAsT,oBACAC,yBACA1U,yBACA,GACA6K,YACA,IAGA2J,cACA,IAvBAA,gBAhCAE,YAMAC,kBAOAC,0BACA,uBACAC,qBAEA,sDAOA,MALA,sBACAC,uBACAC,wCAGAA,SACA,CACA,EA+BA,6BACA,GC1FA3d,iEACAN,MCFA","names":["loaderScript","configUrl","bundle","loadController","controllerOptions","controllerPath","params","window","controller","document","startController","bundles","require","define","routes","parsed","_","url","breadcrumbsUrl","indexUrl","monitorUrl","historyUrl","knownRoutes","start","toolbox","breadcrumbs","renderTo","replace","cls","appController","on","parsedRoute","request","then","catch","apply","formatted","id","label","status","warningAction","warningReason","isPlural","maxReasons","warningOmission","deniedResources","action","__","slice","map","join","_awaiting","_authorized","_inprogress","_paused","_completed","_terminated","_canceled","_status","inprogress","code","can","authorize","pause","terminate","report","print","reactivate","time","changeTime","warning","testId","username","authorized","awaiting","canceled","completed","paused","terminated","buildWarningMessage","getStatuses","getStatus","getStatusByCode","verifyTestTaker","STATUS_AUTHORIZED","STATUS_INPROGRESS","STATUS_PAUSED","STATUS_COMPLETED","STATUS_TERMINATED","ajaxProxy","registerProvider","buffer","helper","helpers","stack1","escapeExpression","$","module","Promise","urlHelper","loadingBar","listBoxFactory","encode","feedback","bulkActionPopup","cascadingComboBox","containerFactory","proxyFactory","indexTpl","actionsTpl","statsTpl","locale","cssScope","serviceUrl","pauseUrl","sessionsUrl","deliveries","title","pageParams","context","container","listBox","textEmpty","textNumber","textLoading","list","width","actions","read","proxyDeliveries","validate","proxySessions","messageContext","responseData","response","unprocessed","execution","uri","categories","props","tplData","locked","inProgress","delivery","result","actionName","reason","resourceType","categoriesSelector","categoriesDefinitions","allowedResources","refresh","err","resolve","reject","e","inProgressExecs","deliveryExecutions","session","$container","$list","crumbs","dataset","deliveryId","testCenterId","assignUrl","removeUrl","monitoringUrl","bc","selection","data","testtaker","dataType","type","error","message","remove","datatable","empty","available","loading","tools","icon","massAction","dialog","autoRender","autoDestroy","onOkBtn","selectable","model","Math","encoded","pattern","unit","extraTime","consumedTime","timeEncoder","format","initConfig","timeUnit","remaining","resource","component","setTemplate","hider","$error","$cmp","errors","errorMessages","value","config","errList","errs","resError","remainingTime","limitTime","tooMuch","tooFew","renderErrors","focus","$ok","checkRequiredFields","clearErrors","state","self","$time","$changeTimeControls","defaultTime","reasons","comment","addClass","submit","event","checkInputError","$btn","control","cancel","modal","$reason","$reasonCategories","$textarea","val","trigger","render","changeTimeOperator","removeClass","init","pollingFactory","timerFactory","dateTimePicker","timeHandlingPopup","encodeTime","monitoringTpl","deliveryLinkTpl","statusFilterTpl","moment","approximatedTimerTpl","flatpickrLocalization","terminateUrl","reactivateUrl","authorizeUrl","extraTimeUrl","reportUrl","executionsUrl","extraFields","originalDataset","$content","defaultTag","allowIrr","defaultAvailableLabel","timeHandlingMode","changeTimeMode","allowedConnectivity","printReportButton","printReportUrl","hasAccessToReactivate","actionButtons","actionList","startDatePicker","dialogSettings","highlightRows","serviceParams","sessionsHistoryUrl","timer","autoStart","polling","elapsed","timers","interval","adjustTime","proxyExecutions","msg","execBulkAction","buttons","close","canDo","monitoringRoute","urlParams","_selection","errorMessage","note","inputLabel","sessionsList","askForReason","reasonRequired","deliveryExecutionData","isAllowed","deliveryName","testTakerData","allowedDeliveries","forbiddenDeliveries","checkedDelivery","resourceTypes","cb","$filter","applyTags","setTagUsage","$el","dropdownAutoWidth","placeholder","minimumResultsForSearch","allowClear","flatpickrLang","separator","stopPollingData","dataPolling","fail","showColumnFirstName","showColumnLastName","showColumnAuthorize","showColumnRemainingTime","showColumnExtendedTime","showActionShowHistory","setStartDataOneDay","css","sortable","transform","filterable","order","filterTransform","dateFormat","values","start_day","last_day","customFilter","template","callback","$filterContainer","dateFormatStr","setup","replaceField","row","disabled","sorttype","rowTimer","refinedValue","countDown","hidden","extendedTime","adjustedTime","isPollingAvailable","startPollingData","newDataset","off","$checkboxes","$checkAll","atomicUpdate","filterStrategy","filterSelector","filtercolumns","filter","sortorder","sortby","pageSizeSelector","setInitialFilters","managerUrl","assign","refreshPolling","awaitingAuthorizationCtlr","isAuthorizedUrl","runDeliveryUrl","spaceEnterKeyCodes","find","html","$proccedButton","runDelivery","clipboard","deliveryStarted","dialogAlert","isRunnable","exit","keepAfterResume","dialogConfirm","stop","async","next","taskCreationButton","$header","$formContainer","$reportContainer","$form","$submitter","$containers","switchContainer","taskQueue","taskCreationUrl","taskCreationData","taskReportContainer","refreshTree","details","historyTable","$element","sortBy","sortOrder","buttonFactory","dateRangeFactory","historyTableFactory","currentRoute","sessions","detailedHistory","tool","service","resetButton","enable","applyButton","startPicker","field","name","endPicker","periodStart","periodEnd","history","update","text","activeProctors","size","activeTestTakers","Handlebars","userActivityFactory","assessments","current","duration","$refreshProgress","chart","$progressbar","activityGraph","x","runRefreshProgressBar","autoRefresh","autoRefreshBar","transition","graphConfig","padding","bottom","left","xFormat","mimeType","axis","tick","position","y","paginationStrategyTop","paginationStrategyBottom","rows","d3","currentAssessmentActivityFactory","activityGraphFactory","deliveriesListFactory","assessmentActivityAutoRefreshInterval","completedAssessmentsAutoRefreshInterval","currentAssessmentActivity","deliveriesList","pauseReasonCategories","poll","userActivity","bindto","tooltip","legend","show","uaData","doPause","pendingPromise","done","labels","proctoringLabels","get","console","arguments","localized"],"sources":["../../loader/bootstrap.js","../controller/app.js","../helper/status.js","../component/proxy.js","../templates/delivery/index!tpl","../templates/delivery/listBoxActions!tpl","../templates/delivery/listBoxStats!tpl","../controller/Delivery/index.js","../component/breadcrumbs.js","../controller/Delivery/manage.js","../component/timeHandling/encoder.js","../component/timeHandling/timeHandling!tpl","../component/timeHandling/timeHandling.js","../templates/delivery/monitoring!tpl","../templates/delivery/deliveryLink!tpl","../templates/delivery/statusFilter!tpl","../templates/delivery/approximatedTimer!tpl","../controller/Delivery/monitoring.js","../controller/Delivery/testTakers.js","../templates/deliveryServer/authorizationSuccess!tpl","../templates/deliveryServer/authorizationListBoxActions!tpl","../templates/deliveryServer/authorizationEntryPoint!tpl","../controller/DeliveryServer/awaiting.js","../controller/Irregularity/index.js","../component/history/historyTable.js","../templates/reporting/index!tpl","../controller/Reporting/history.js","../controller/routes.js","../component/activityMonitoring/userActivity/userActivityBlock!tpl","../component/activityMonitoring/userActivity/userActivity!tpl","../component/activityMonitoring/userActivity/userActivity.js","../component/activityMonitoring/currentAssessmentActivity/currentAssessmentActivity!tpl","../component/activityMonitoring/currentAssessmentActivity/currentAssessmentActivity.js","../component/activityMonitoring/progressbar!tpl","../component/activityMonitoring/activityGraph.js","../component/activityMonitoring/deliveriesList/deliveriesList.js","../controller/Tools/assessmentActivity.js","../helper/textConverter.js","module-create.js","/home/alberto/workspace/oat/taocloud-ami-luoss/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Bootstrap the app, start the entry controller\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n(function(){\n    'use strict';\n\n\n\n    var loaderScript = document.getElementById('amd-loader');\n    var configUrl = loaderScript.getAttribute('data-config');\n    var bundle  = loaderScript.getAttribute('data-bundle');\n\n    var loadController = function loadController(){\n        var controllerOptions = {};\n        var controllerPath = loaderScript.getAttribute('data-controller');\n        var params = loaderScript.getAttribute('data-params');\n        try{\n            controllerOptions = JSON.parse(params);\n        } catch(err){\n            controllerOptions = {};\n        }\n        window.require([controllerPath], function(controller) {\n            var startController = function startController(){\n                if(!window.started){\n                    window.started = true;\n                    controller.start(controllerOptions);\n                }\n            };\n            document.addEventListener('readystatechange', startController, false);\n            if (document.readyState === 'complete') {\n                startController();\n            }\n        });\n    };\n\n    //always start to load the config\n    window.require([configUrl], function() {\n\n        //define the global loading mechanism\n        if(!window.loadBundles){\n            //keep tracl of loaded bundles, even if require does it,\n            //this prevent some unecessary cycles\n            window.loaded = {};\n\n            /**\n             * Loading entry point for inter bundle dependency,\n             * always take the bundles from the params and window.bundles\n             * @param {String[]} [bundles] - an optional list of bundle to load\n             */\n            window.loadBundles = function loadBundles(bundles){\n                bundles = bundles || [];\n                bundles = bundles.concat(window.bundles)\n                bundles = bundles.filter( function(item, index){\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\n                });\n                require(bundles, function(){\n                    bundles.forEach( function( item ) {\n                        window.loaded[item] = true;\n                    });\n                    loadController();\n                });\n            }\n        }\n\n        if(bundle || (window.bundles && window.bundles.length)) {\n            window.loadBundles([bundle]);\n        } else {\n            loadController();\n        }\n    });\n})();\n\ndefine(\"loader/bootstrap\", function(){});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoProctoring/controller/app',[\n    'lodash',\n    'controller/app',\n    'core/dataProvider/request',\n    'ui/container',\n    'ui/breadcrumbs',\n    'util/url'\n], function (_, appController, request, containerFactory, breadcrumbsFactory, urlHelper) {\n    'use strict';\n\n    var breadcrumbsUrl = urlHelper.route('load', 'Breadcrumbs', 'tao');\n    var indexUrl = urlHelper.route('index', 'DeliverySelection', 'taoProctoring');\n    var monitorUrl = urlHelper.route('index', 'Monitor', 'taoProctoring');\n    var historyUrl = urlHelper.route('index', 'Reporting', 'taoProctoring');\n    var knownRoutes = [{\n        url: indexUrl,\n        params: ['context']\n    }, {\n        url: monitorUrl,\n        params: ['delivery', 'context']\n    }, {\n        url: historyUrl,\n        params: ['delivery', 'session', 'context']\n    }];\n\n    /**\n     * Gets the list of routes that lead to the provided route\n     * @param {String} route\n     * @returns {String[]}\n     */\n    function getRoutes(route) {\n        var routes = [];\n        var parsed = urlHelper.parse(route);\n\n        _.forEach(knownRoutes, function (knownRoute) {\n            var url = urlHelper.parse(knownRoute.url);\n            var params = {};\n\n            if (parsed.path === url.path) {\n                routes.push(route);\n                return false;\n            }\n\n            _.forEach(knownRoute.params, function (param) {\n                if (parsed.query[param]) {\n                    params[param] = decodeURIComponent(parsed.query[param]);\n                }\n            });\n\n            routes.push(urlHelper.build(knownRoute.url, params));\n        });\n        return routes;\n    }\n\n    /**\n     * The app controller takes care of the application navigation and routing.\n     */\n    return _.defaults({\n        /**\n         * App controller entry point: set up the router.\n         */\n        start: function start() {\n            var toolbox = containerFactory('.header');\n            var breadcrumbs = breadcrumbsFactory({\n                renderTo: toolbox.getElement(),\n                replace: true,\n                cls: 'action-bar horizontal-action-bar'\n            });\n\n            appController\n                .on('change.breadcrumbs', function (route) {\n                    var parsedRoute = urlHelper.parse(route);\n                    var routes = getRoutes(route);\n\n                    if (parsedRoute.query['link-type'] !== undefined && parsedRoute.query['link-type'] === 'direct') {\n                        delete parsedRoute.query['link-type'];\n                        window.location.replace(decodeURIComponent(urlHelper.build(parsedRoute.path, parsedRoute.query)));\n                    }\n                    else {\n                        request(breadcrumbsUrl, {route: routes}, 'POST')\n                            .then(function (data) {\n                                breadcrumbs.update(data);\n                            })\n                            .catch(function (err) {\n                                appController.onError(err);\n                            });\n                    }\n                })\n                .apply('a', toolbox.getElement())\n                .start();\n        }\n    }, appController);\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\ndefine('taoProctoring/helper/status',['lodash', 'i18n'], function(_, __){\n    'use strict';\n    var _awaiting = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusAwaiting',\n        _authorized = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusAuthorized',\n        _inprogress = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusActive',\n        _paused = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusPaused',\n        _completed = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusFinished',\n        _terminated = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusTerminated',\n        _canceled = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusCanceled';\n        \n    /**\n     * Checks if adding extra time should be possible or not for the given delivery.\n     * Adding extra time will be possible if the delivery contains sections\n     * with time limits.\n     * @param {Object} delivery - delivery to check\n     * @returns {boolean | string } - returns true if adding extra time is possible, reason of denied if not\n     */\n    function canAddExtraTime (delivery) {\n        return delivery.timer.remaining_time > 0 || __('test has no time limits');\n    }\n\n    var _status = {\n        inprogress : {\n            code : _inprogress,\n            label : __('In Progress'),\n            can : {\n                authorize : __('already authorized'),\n                pause : true,\n                terminate : true,\n                report : true,\n                print : __('not finished'),\n                reactivate : __('not terminated'),\n                time: canAddExtraTime,\n                changeTime: __('in progress'),\n            },\n            warning : {\n                authorize : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had already been authorized.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had already been authorized.', username);\n                    } else {\n                        return __('Test had already been authorized.');\n                    }\n                },\n                print : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had not been finished.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had not been finished.', username);\n                    } else {\n                        return __('Test had not been finished.');\n                    }\n                },\n                reactivate : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s must be terminated.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test must be terminated.', username);\n                    } else {\n                        return __('Test  must be terminated.');\n                    }\n                }\n            }\n        },\n        authorized : {\n            code : _authorized,\n            label : __('Authorized but not started'),\n            can : {\n                authorize : __('already authorized'),\n                terminate : true,\n                report : true,\n                pause : __('not started'), //not in progress\n                print : __('not finished'),\n                reactivate : __('not terminated'),\n                time: canAddExtraTime,\n                changeTime: __('authorized but not started'),\n            },\n            warning : {\n                authorize : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had already been authorized.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had already been authorized.', username);\n                    } else {\n                        return __('Test had already been authorized.');\n                    }\n                },\n                pause : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had not been started.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had not been started.', username);\n                    } else {\n                        return __('Test had not been started.');\n                    }\n                },\n                print : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had not been finished.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had not been finished.', username);\n                    } else {\n                        return __('Test had not been finished.');\n                    }\n                },\n                reactivate : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s must be terminated.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test must be terminated.', username);\n                    } else {\n                        return __('Test  must be terminated.');\n                    }\n                }\n            }\n        },\n        awaiting : {\n            code : _awaiting,\n            label : __('Awaiting'),\n            can : {\n                authorize : true,\n                pause : __('not in progress'),\n                terminate : true,\n                reactivate : __('not terminated'),\n                report : true,\n                print : __('not finished'),\n                time : canAddExtraTime,\n                changeTime: __('awaiting'),\n            },\n            warning : {\n                pause : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had not been in progress.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had not been in progress.', username);\n                    } else {\n                        return __('Test had not been in progress.');\n                    }\n                },\n                print : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had not been finished.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had not been finished.', username);\n                    } else {\n                        return __('Test had not been finished.');\n                    }\n                },\n                reactivate : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s must be terminated.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test must be terminated.', username);\n                    } else {\n                        return __('Test  must be terminated.');\n                    }\n                }\n            }\n        },\n        canceled : {\n            code : _canceled,\n            label : __('Canceled'),\n            can : {\n                authorize : __('canceled'),\n                pause : __('canceled'),\n                terminate : __('canceled'),\n                reactivate : __('not terminated'),\n                report : true,\n                print: __('canceled'),\n                time : __('canceled'),\n                changeTime: __('canceled'),\n            },\n            warning : {\n                authorize : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been canceled.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been canceled.', username);\n                    } else {\n                        return __('Test had been canceled.');\n                    }\n                },\n                pause : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been canceled.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been canceled.', username);\n                    } else {\n                        return __('Test had been canceled.');\n                    }\n                },\n                terminate : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been canceled.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been canceled.', username);\n                    } else {\n                        return __('Test had been canceled.');\n                    }\n                },\n                reactivate : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been canceled.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been canceled.', username);\n                    } else {\n                        return __('Test had been canceled.');\n                    }\n                },\n                print : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been canceled.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been canceled.', username);\n                    } else {\n                        return __('Test had been canceled.');\n                    }\n                }\n            }\n        },\n        completed : {\n            code : _completed,\n            label : __('Completed'),\n            can : {\n                authorize : __('completed'),\n                pause : __('completed'),\n                terminate : __('completed'),\n                reactivate : __('not terminated'),\n                report : true,\n                print: true,\n                time :  __('completed'),\n                changeTime: __('completed'),\n            },\n            warning : {\n                authorize : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been completed.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been completed.', username);\n                    } else {\n                        return __('Test had been completed.');\n                    }\n                },\n                pause : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been completed.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been completed.', username);\n                    } else {\n                        return __('Test had been completed.');\n                    }\n                },\n                terminate : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been completed.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been completed.', username);\n                    } else {\n                        return __('Test had been completed.');\n                    }\n                }\n                ,\n                reactivate : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s must be terminated.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test must be terminated.', username);\n                    } else {\n                        return __('Test  must be terminated.');\n                    }\n                }\n            }\n        },\n        paused : {\n            code : _paused,\n            label : __('Paused'),\n            can : {\n                authorize : __('paused'),\n                pause : __('already paused'),\n                reactivate : __('not terminated'),\n                terminate : true,\n                report : true,\n                print : __('not finished'),\n                time : canAddExtraTime,\n                changeTime: __('paused'),\n            },\n            warning : {\n                authorize : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been paused.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been paused.', username);\n                    } else {\n                        return __('Test had been paused.');\n                    }\n                },\n                pause : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had already been paused.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had already been paused.', username);\n                    } else {\n                        return __('Test had already been paused.');\n                    }\n                },\n                print : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had not been finished.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had not been finished.', username);\n                    } else {\n                        return __('Test had not been finished.');\n                    }\n                },\n                reactivate : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s must be terminated.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test must be terminated.', username);\n                    } else {\n                        return __('Test  must be terminated.');\n                    }\n                }\n            }\n        },\n        terminated : {\n            code : _terminated,\n            label : __('Terminated'),\n            can : {\n                authorize : __('terminated'),\n                pause : __('terminated'),\n                terminate : __('already terminated'),\n                report : true,\n                reactivate : true,\n                print: true,\n                time : __('terminated'),\n                changeTime: __('terminated'),\n            },\n            warning : {\n                authorize : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been terminated.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been terminated.', username);\n                    } else {\n                        return __('Test had been terminated.');\n                    }\n                },\n                pause : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had been terminated.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had been terminated.', username);\n                    } else {\n                        return __('Test had been terminated.');\n                    }\n                },\n                terminate : function (username, testId) {\n                    if (testId) {\n                        return __('Test %s had already been terminated.', testId);\n                    } else if (username) {\n                        return __('%s\\'s test had already been terminated.', username);\n                    } else {\n                        return __('Test had alredy been terminated.');\n                    }\n                },\n            }\n        }\n    };\n\n    /**\n     * Get the status model from its name\n     * @param {string} statusName\n     * @returns {object}\n     */\n    function getStatus(statusName){\n        return _status[statusName];\n    }\n\n    /**\n     * Get the status model from its code\n     * @param {string} statusCode\n     * @returns {object}\n     */\n    function getStatusByCode(statusCode){\n        return _.find(_status, {code : statusCode});\n    }\n\n    /**\n     * Verify and reformat test taker data for the execBulkAction's need\n     * @param {Object} testTakerData\n     * @param {String} actionName\n     * @returns {Object}\n     */\n    function verifyTestTaker(testTakerData, actionName){\n        var formatted = {\n            id : testTakerData.id,\n            label : testTakerData.firstname + ' ' + testTakerData.lastname\n        };\n        var status = _status.getStatusByCode(testTakerData.state.status);\n        if(status){\n            formatted.allowed = (status.can[actionName] === true);\n            if(!formatted.allowed){\n                formatted.reason = status.can[actionName];\n            }\n        }\n        return formatted;\n    }\n\n    /**\n     * Get status model mappings formatted\n     * @returns {Array}\n     */\n    function getStatuses() {\n        return _.map(_status, function (el) {\n            return {code: el.code, label: el.label};\n        });\n    }\n\n    /**\n     * Create a warning message for execBulkAction()\n     * @param {String} action\n     * @param {String[]} selection\n     * @param {Object[]} deniedResources\n     * @returns {String}\n     */\n    function buildWarningMessage(action, selection, deniedResources) {\n        var isPlural = selection.length > 1;\n        var maxReasons = 2;\n        var warningAction;\n        var warningOmission = __('...');\n        var warningReason;\n\n        deniedResources = deniedResources || [{}];\n\n        switch (action) {\n            case 'authorize':\n                warningAction = isPlural ?\n                    __('Cannot authorize test sessions.') :\n                    __('Cannot authorize test session.');\n                break;\n            case 'pause':\n                warningAction = isPlural ?\n                    __('Cannot pause test sessions.') :\n                    __('Cannot pause test session.');\n                break;\n            case 'terminate':\n                warningAction = isPlural ?\n                    __('Cannot terminate test sessions.') :\n                    __('Cannot terminate test session.');\n                break;\n            case 'reactivate':\n                warningAction = isPlural ?\n                    __('Cannot reactivate test sessions.') :\n                    __('Cannot reactivate test session.');\n                break;\n            case 'report':\n                warningAction = isPlural ?\n                    __('Cannot report test sessions.') :\n                    __('Cannot report test session.');\n                break;\n            case 'print':\n                warningAction = isPlural ?\n                    __('Cannot print test sessions.') :\n                    __('Cannot print test session.');\n                break;\n            case 'time':\n                warningAction = isPlural ?\n                    __('Cannot extend test sessions.') :\n                    __('Cannot extend test session.');\n                break;\n            default:\n                warningAction = __('Cannot execute action.');\n        }\n\n        warningReason = _(deniedResources)\n            .slice(0, maxReasons)\n            .map(function (deniedResource) {\n                return deniedResource.warning;\n            })\n            .join(' ');\n\n        if (deniedResources.length > maxReasons) {\n            warningReason += warningOmission;\n        }\n\n        return warningAction + ' ' + warningReason;\n    }\n\n    return {\n        buildWarningMessage : buildWarningMessage,\n        getStatuses : getStatuses,\n        getStatus : getStatus,\n        getStatusByCode : getStatusByCode,\n        verifyTestTaker : verifyTestTaker,\n        STATUS_AUTHORIZED : _authorized,\n        STATUS_INPROGRESS : _inprogress,\n        STATUS_PAUSED : _paused,\n        STATUS_COMPLETED : _completed,\n        STATUS_TERMINATED : _terminated\n    };\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoProctoring/component/proxy',[\n    'core/dataProvider/proxy',\n    'core/dataProvider/proxy/ajax'\n], function (proxyFactory,\n             ajaxProxy) {\n    'use strict';\n\n    // TODO: use a better implementation to load and register the providers\n    return proxyFactory\n        .registerProvider('ajax', ajaxProxy);\n});\n\n","\ndefine('tpl!taoProctoring/templates/delivery/index', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<h1>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h1>\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"content\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.title), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"panel\\\"></div>\\n    <div class=\\\"list clearfix\\\"></div>\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoProctoring/templates/delivery/listBoxActions', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<span class=\\\"listbox-actions\\\">\\n    <span class=\\\"action pause\\\" data-delivery=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <span class=\\\"icon-pause\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Pause\", options) : helperMissing.call(depth0, \"__\", \"Pause\", options)))\n    + \"\\n    </span>\\n    <span class=\\\"action play\\\">\\n        <span class=\\\"icon-play\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Monitor\", options) : helperMissing.call(depth0, \"__\", \"Monitor\", options)))\n    + \"\\n    </span>\\n</span>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoProctoring/templates/delivery/listBoxStats', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n<ul class=\\\"plain listbox-properties\\\">\\n    <li>\\n        <label>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start\", options) : helperMissing.call(depth0, \"__\", \"Start\", options)))\n    + \"</label>: \";\n  if (helper = helpers.periodStart) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.periodStart); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n    </li>\\n    <li>\\n        <label>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"End\", options) : helperMissing.call(depth0, \"__\", \"End\", options)))\n    + \"</label>: \";\n  if (helper = helpers.periodEnd) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.periodEnd); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n    </li>\\n</ul>\\n\";\n  return buffer;\n  }\n\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showProperties), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n<p class=\\\"listbox-stats\\\">\\n    <span class=\\\"icon-lock\\\"></span><span class=\\\"number\\\">\";\n  if (helper = helpers.locked) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.locked); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <span class=\\\"icon-play\\\"></span><span class=\\\"number\\\">\";\n  if (helper = helpers.inProgress) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.inProgress); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <span class=\\\"icon-pause\\\"></span><span class=\\\"number\\\">\";\n  if (helper = helpers.paused) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.paused); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n</p>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/index',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'core/promise',\n    'controller/app',\n    'util/url',\n    'layout/loading-bar',\n    'ui/listbox',\n    'util/encode',\n    'ui/feedback',\n    'ui/bulkActionPopup',\n    'ui/cascadingComboBox',\n    'ui/container',\n    'taoProctoring/helper/status',\n    'taoProctoring/component/proxy',\n    'tpl!taoProctoring/templates/delivery/index',\n    'tpl!taoProctoring/templates/delivery/listBoxActions',\n    'tpl!taoProctoring/templates/delivery/listBoxStats',\n    'util/locale'\n], function (\n    $,\n    _,\n    __,\n    module,\n    Promise,\n    appController,\n    urlHelper,\n    loadingBar,\n    listBoxFactory,\n    encode,\n    feedback,\n    bulkActionPopup,\n    cascadingComboBox,\n    containerFactory,\n    _status,\n    proxyFactory,\n    indexTpl,\n    actionsTpl,\n    statsTpl,\n    locale\n) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-index';\n\n    var serviceUrl = urlHelper.route('deliveries', 'DeliverySelection', 'taoProctoring');\n    var pauseUrl = urlHelper.route('pauseExecutions', 'Monitor', 'taoProctoring');\n    var sessionsUrl = urlHelper.route('deliveryExecutions', 'Monitor', 'taoProctoring');\n\n    /**\n     * Gets a list of named sessions\n     * @param {Array} sessions\n     * @returns {Array}\n     */\n    function getSessionsNames(sessions) {\n        return _.map(sessions, function (session) {\n            return {\n                id: session.id,\n                label: session.delivery.label + ' [' + locale.formatDateTime(session.start_time) + ']'\n            };\n        });\n    }\n\n    /**\n     * Validates the params to be sent along the provider's requests\n     * @param params\n     * @returns {boolean}\n     */\n    function validateParams(params) {\n        return _.isPlainObject(params) &&\n            (_.isUndefined(params.delivery) || !_.isEmpty(params.delivery)) &&\n            (_.isUndefined(params.execution) || !_.isEmpty(params.execution)) &&\n            (_.isUndefined(params.reason) || !_.isEmpty(params.reason));\n    }\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the ProctorDelivery index page\n     *\n     * @type {Object}\n     */\n    return {\n        /**\n         * Entry point of the page\n         */\n        start: function start() {\n            var title = __(\"Sessions\");\n            var pageParams = module.config();\n            var context = pageParams.context;\n            var deliveries, categories, proxyDeliveries, proxySessions;\n            var container = containerFactory('.container').changeScope(cssScope).write(indexTpl({title: title}));\n            var listBox = listBoxFactory({\n                title: title,\n                textEmpty: __(\"No sessions available\"),\n                textNumber: __(\"Available\"),\n                textLoading: __(\"Loading\"),\n                renderTo: container.find('.content'),\n                replace: true,\n                list: [],\n                width: 12\n            });\n\n            appController.on('change.deliveryIndex', function() {\n                appController.off('.deliveryIndex');\n                listBox.destroy();\n                container.destroy();\n            });\n\n            Promise.all([\n                proxyFactory('ajax').init({\n                    actions: {\n                        read: serviceUrl\n                    }\n                }).then(function(proxy) {\n                    proxyDeliveries = proxy;\n                }),\n                proxyFactory('ajax').init({\n                    actions: {\n                        read: {\n                            url: sessionsUrl,\n                            validate: validateParams\n                        },\n                        pause: {\n                            url: pauseUrl,\n                            validate: validateParams\n                        }\n                    }\n                }).then(function(proxy) {\n                    proxySessions = proxy;\n                })\n            ]).then(function() {\n                // get the label of a delivery from its ID\n                function getDeliveryLabel(id) {\n                    return deliveries[id] && deliveries[id].label;\n                }\n\n                //\n                function formatPauseWarning(response, deliveryExecutions) {\n                    var messageContext, unprocessed;\n                    var responseData;\n\n                    messageContext = '';\n                    if (response) {\n                        responseData = response.data;\n                        unprocessed = {};\n                        if (responseData) {\n                            _.forEach(responseData.unprocessed, function (id) {\n                                var execution = deliveryExecutions[id];\n                                var uri = execution && execution.delivery && execution.delivery.uri;\n                                if (uri) {\n                                    unprocessed[uri] = (unprocessed[uri] || 0) + 1;\n                                }\n                            });\n                        }\n\n                        unprocessed = _.map(unprocessed, function (count, uri) {\n                            if (count > 1) {\n                                return __('%d sessions of the delivery %s have not been paused', count, getDeliveryLabel(uri));\n                            }\n                            return __('A session of the delivery %s have not been paused', getDeliveryLabel(uri));\n                        });\n\n                        if (unprocessed.length) {\n                            messageContext += '<br>' + unprocessed.join('<br>');\n                        }\n                        if (response.error) {\n                            messageContext += '<br>' + encode.html(response.error);\n                        }\n                    }\n\n                    return messageContext;\n                }\n\n                // refresh the index\n                function refresh() {\n                    loadingBar.start();\n                    listBox.setLoading(true);\n\n                    return proxyDeliveries.read({context: context}).then(function (data) {\n                        categories = data.categories;\n\n                        deliveries = _.transform(data.list, function (result, delivery) {\n                            var props = delivery.properties;\n                            var tplData = {\n                                locked: delivery.stats.awaitingApproval,\n                                inProgress: delivery.stats.inProgress,\n                                paused: delivery.stats.paused\n                            };\n\n                            if (props && props.periodStart && props.periodEnd) {\n                                tplData.showProperties = true;\n                                tplData.periodStart = props.periodStart;\n                                tplData.periodEnd = props.periodEnd;\n\n                                //add a special class for boxes that have more information to display\n                                delivery.cls = 'has-properties-displayed';\n                            }\n                            delivery.html = actionsTpl({\n                                id: delivery.id\n                            });\n                            delivery.content = statsTpl(tplData);\n                            delivery.cls = ((delivery.cls || '') + ' router').trim();\n\n                            result[delivery.id] = delivery;\n                        }, {});\n\n                        listBox.update(data.list);\n                        loadingBar.stop();\n\n                    }).catch(function (err) {\n                        appController.onError(err);\n                    });\n                }\n\n                // request a pause fo the selected delivery executions\n                function pause(deliveryId, selection, deliveryExecutions) {\n                    return new Promise(function(resolve, reject) {\n                        bulkActionPopup({\n                            renderTo: container.getElement(),\n                            actionName: __('Pause Session'),\n                            reason: true,\n                            resourceType: 'session',\n                            categoriesSelector: cascadingComboBox({\n                                categoriesDefinitions: categories.pause.categoriesDefinitions,\n                                categories: categories.pause.categories\n                            }),\n                            allowedResources: getSessionsNames(selection)\n                        })\n                            .on('cancel', resolve)\n                            .on('ok', function (reason) {\n                                proxySessions.action('pause', {\n                                    delivery: deliveryId,\n                                    execution: _.pluck(selection, 'id'),\n                                    reason: reason\n                                }).then(function() {\n                                    feedback().success('Selected deliveries successfully paused');\n                                    refresh().then(resolve).catch(reject);\n                                }).catch(function(err) {\n                                    if (err.response) {\n                                        feedback().warning(__('Something went wrong ...') + '<br>' + formatPauseWarning(err.response, deliveryExecutions), {encodeHtml: false});\n                                        resolve();\n                                    } else {\n                                        reject(err);\n                                    }\n                                });\n                            });\n                    });\n                }\n\n                listBox.getElement().on('click', '.pause', function (e) {\n                    var deliveryId = $(this).data('delivery');\n\n                    loadingBar.start();\n\n                    //prevent clicking the parent link that goes to the monitoring screen\n                    e.stopPropagation();\n                    e.preventDefault();\n\n                    //get list of all test taker for the selected delivery\n                    proxySessions.read({delivery: deliveryId, context: context}).then(function(sessions) {\n                        var deliveryExecutions = {};\n                        var inProgressExecs;\n                        inProgressExecs = _.filter(sessions, function (session) {\n                            deliveryExecutions[session.id] = session;\n                            return (session.state && session.state.status === _status.getStatus('inprogress').code);\n                        });\n\n                        if (inProgressExecs.length) {\n                            return pause(deliveryId, inProgressExecs, deliveryExecutions);\n                        } else {\n                            feedback().info(__('There is no delivery in progress'));\n                        }\n                    }).catch(function (err) {\n                        appController.onError(err);\n                    }).then(function() {\n                        loadingBar.stop();\n                    });\n                });\n\n                refresh();\n\n            }).catch(function(err) {\n                appController.onError(err);\n                loadingBar.stop();\n            });\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\ndefine('taoProctoring/component/breadcrumbs',['ui/breadcrumbs'], function(breadcrumbs){\n    'use strict';\n\n    /**\n     * Wrap the generic breadcrumbs component into a very specialized\n     *\n     * @param {JQyery} $container\n     * @param {Array} [crumbs]\n     * @returns {unresolved}\n     */\n    return function breadcrumbFactory($container, crumbs){\n        return breadcrumbs({\n            breadcrumbs : crumbs,\n            renderTo: $container.find('.header'),\n            replace: true,\n            cls : 'action-bar horizontal-action-bar'\n        });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/manage',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'taoProctoring/component/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, dialog, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-manager';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring delivery page\n     *\n     * @type {Object}\n     */\n    var proctorDeliveryIndexCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var deliveryId = $container.data('delivery');\n            var testCenterId = $container.data('testcenter');\n            var assignUrl = helpers._url('testTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var removeUrl = helpers._url('removeTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var serviceUrl = helpers._url('deliveryTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var monitoringUrl = helpers._url('monitoring', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n\n            var bc = breadcrumbsFactory($container, crumbs);\n\n            // request the server with a selection of test takers\n            var request = function(url, selection, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: {\n                            testtaker: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            // request the server to remove the selected test takers\n            var remove = function(selection) {\n                request(removeUrl, selection, __('Test takers have been removed'));\n            };\n\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function() {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No assigned test takers'),\n                        available: __('Assigned test takers'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'refresh',\n                        icon: 'reset',\n                        title: __('Refresh the page'),\n                        label: __('Refresh'),\n                        action: function() {\n                            $list.datatable('refresh');\n                        }\n                    }, {\n                        id: 'back',\n                        icon: 'preview',\n                        title: __('Return to the session monitoring'),\n                        label: __('Monitoring'),\n                        action: function() {\n                            window.location.href = monitoringUrl;\n                        }\n                    }, {\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign more test takers to this session'),\n                        label: __('Add test takers'),\n                        action: function() {\n                            window.location.href = assignUrl;\n                        }\n                    }, {\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the selected test takers from the session'),\n                        label: __('Remove'),\n                        massAction: true,\n                        action: function(selection) {\n                            dialog({\n                                message: __('The test takers will be removed from this session. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    remove(selection);\n                                }\n                            });\n                        }\n                    }],\n                    actions: [{\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the test taker from the session'),\n                        action: function(id) {\n                            dialog({\n                                autoRender: true,\n                                autoDestroy: true,\n                                message: __('The test taker will be removed from this session. Continue ?'),\n                                onOkBtn: function() {\n                                    remove([id]);\n                                }\n                            });\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'firstname',\n                        label: __('First name')\n                    }, {\n                        id: 'lastname',\n                        label: __('Last name')\n                    }, {\n                        id: 'identifier',\n                        label: __('Identifier')\n                    }, {\n                        id: 'status',\n                        label: __('Status')\n                    }]\n                }, dataset);\n        }\n    };\n\n    return proctorDeliveryIndexCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/component/timeHandling/encoder',[\n    'core/format',\n    'core/encoder/time'\n], function (format, timeEncoder) {\n    'use strict';\n\n    /**\n     * Encodes the extra time in a human readable way\n     * @param {Number} extraTime - The extra time to encode\n     * @param {Number} consumedTime - The already consumed time\n     * @param {String} [pattern] - The display pattern used when no time is consumed (default: %s)\n     * @param {Number} [unit] - The time unit\n     * @returns {String}\n     */\n    function encodeExtraTime(extraTime, consumedTime, pattern, unit) {\n        var encoded = '';\n\n        pattern = pattern || '%s';\n        unit = unit || 1;\n\n        if (extraTime) {\n            if (consumedTime) {\n                encoded = timeEncoder.encode(Math.min(consumedTime, extraTime)) + '/' + timeEncoder.encode(extraTime);\n            } else if (pattern === 'HH:mm:ss') {\n                encoded = timeEncoder.encode(extraTime);\n            } else {\n                encoded = format(pattern, extraTime / unit);\n            }\n\n            encoded = ' +' + encoded;\n        }\n\n        return encoded;\n    }\n\n    return encodeExtraTime;\n});\n\n","\ndefine('tpl!taoProctoring/component/timeHandling/timeHandling', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n        <div class=\\\"multiple\\\">\\n            <p>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The action will be applied to the following session(s)\", options) : helperMissing.call(depth0, \"__\", \"The action will be applied to the following session(s)\", options)))\n    + \":</p>\\n            <ul class=\\\"plain applicables\\\">\\n                \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.changeTimeMode), {hash:{},inverse:self.program(5, program5, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            </ul>\\n        </div>\\n\\n        \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.deniedResources)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n        <div class=\\\"form\\\">\\n            <p>\\n                \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.changeTimeMode), {hash:{},inverse:self.program(16, program16, data),fn:self.program(14, program14, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                <div class=\\\"errors\\\">\\n                    <div class=\\\"feedback-error small hidden\\\">\";\n  if (helper = helpers.errorMessage) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.errorMessage); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n                </div>\\n            </p>\\n        </div>\\n        <p>\\n            <strong>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Note\", options) : helperMissing.call(depth0, \"__\", \"Note\", options)))\n    + \":</strong>\\n            <em>\";\n  if (helper = helpers.note) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.note); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</em>\\n        </p>\\n\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.reason), {hash:{},inverse:self.noop,fn:self.program(18, program18, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.allowedResources), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                \";\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                        <li data-resource=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                            <span class=\\\"resource-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                        </li>\\n                    \";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.allowedResources), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                \";\n  return buffer;\n  }\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                        <li data-resource=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                            <span class=\\\"resource-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.remainingStr), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.extraTimeStr), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                        </li>\\n                    \";\n  return buffer;\n  }\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"remaining\\\">\";\n  if (helper = helpers.remainingStr) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.remainingStr); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"time\\\">(\";\n  if (helper = helpers.extraTimeStr) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.extraTimeStr); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \")</span>\";\n  return buffer;\n  }\n\nfunction program11(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n            <p>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"However, the action will not be applied to the following sessions\", options) : helperMissing.call(depth0, \"__\", \"However, the action will not be applied to the following sessions\", options)))\n    + \":</p>\\n            <ul class=\\\"plain no-applicables\\\">\\n                \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.deniedResources), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            </ul>\\n        \";\n  return buffer;\n  }\nfunction program12(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                <li data-resource=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                    <span class=\\\"resource-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                    <span class=\\\"reason\\\">(\";\n  if (helper = helpers.reason) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.reason); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \")</span>\\n                </li>\\n                \";\n  return buffer;\n  }\n\nfunction program14(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n                    <label for=\\\"input-extra-time\\\">\";\n  if (helper = helpers.inputLabel) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.inputLabel); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \":</label>\\n                    <span class=\\\"change-time-controls-container\\\">\\n                        <label class=\\\"change-time-control-container\\\">\\n                            <input class=\\\"change-time-control__input\\\" checked=\\\"checked\\\" type=\\\"radio\\\" name=\\\"changeTimeControl\\\" value=\\\"\\\">\\n                            <i class=\\\"change-time-control--add\\\">+</i>\\n                        </label>\\n                        <label class=\\\"change-time-control-container\\\">\\n                            <input class=\\\"change-time-control__input\\\" type=\\\"radio\\\" name=\\\"changeTimeControl\\\" value=\\\"-\\\">\\n                            <i class=\\\"change-time-control--sub\\\">—</i>\\n                        </label>\\n                    </span>\\n                    <input type=\\\"number\\\" id=\\\"input-extra-time\\\" data-control=\\\"time\\\" value=\\\"\";\n  if (helper = helpers.time) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.time); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" step=\\\"1\\\" min=\\\"0\\\" />\\n                    <label for=\\\"input-extra-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"minutes\", options) : helperMissing.call(depth0, \"__\", \"minutes\", options)))\n    + \"</label>\\n                \";\n  return buffer;\n  }\n\nfunction program16(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n                    <label for=\\\"input-extra-time\\\">\";\n  if (helper = helpers.inputLabel) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.inputLabel); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \":</label>\\n                    <input type=\\\"text\\\" id=\\\"input-extra-time\\\" data-control=\\\"time\\\" value=\\\"\";\n  if (helper = helpers.time) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.time); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" maxlength=\\\"4\\\" size=\\\"4\\\" />\\n                    <label for=\\\"input-extra-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"minutes\", options) : helperMissing.call(depth0, \"__\", \"minutes\", options)))\n    + \"</label>\\n                \";\n  return buffer;\n  }\n\nfunction program18(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n            <div class=\\\"reason\\\">\\n                <p>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Please provide a reason\", options) : helperMissing.call(depth0, \"__\", \"Please provide a reason\", options)))\n    + \":\\n                </p>\\n                <div class=\\\"categories\\\"></div>\\n                <div class=\\\"comment\\\">\\n                    <textarea placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"comment...\", options) : helperMissing.call(depth0, \"__\", \"comment...\", options)))\n    + \"\\\"></textarea>\\n                </div>\\n            </div>\\n        \";\n  return buffer;\n  }\n\nfunction program20(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n        <p>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The action cannot be applied, no eligible sessions found\", options) : helperMissing.call(depth0, \"__\", \"The action cannot be applied, no eligible sessions found\", options)))\n    + \"</p>\\n    \";\n  return buffer;\n  }\n\nfunction program22(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n            <a href=\\\"#\\\" class=\\\"btn action cancel\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"cancel the action\", options) : helperMissing.call(depth0, \"__\", \"cancel the action\", options)))\n    + \"\\\" data-control=\\\"cancel\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"cancel\", options) : helperMissing.call(depth0, \"__\", \"cancel\", options)))\n    + \"</a>\\n        \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"bulk-action-popup\\\">\\n    <h2 class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Action\", options) : helperMissing.call(depth0, \"__\", \"Action\", options)))\n    + \": \";\n  if (helper = helpers.actionName) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.actionName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h2>\\n\\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.allowedResources)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.program(20, program20, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n    <div class=\\\"actions\\\">\\n        <button class=\\\"btn btn-info small action done\\\" data-control=\\\"done\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"OK\", options) : helperMissing.call(depth0, \"__\", \"OK\", options)))\n    + \"</button>\\n        \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.allowedResources)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(22, program22, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </div>\\n\\n</div>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/component/timeHandling/timeHandling',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/encoder/time',\n    'ui/component',\n    'ui/hider',\n    'taoProctoring/component/timeHandling/encoder',\n    'tpl!taoProctoring/component/timeHandling/timeHandling',\n    'ui/modal'\n], function ($, _, __, timeEncoder, component, hider, encodeExtraTime, extraTimeTpl) {\n    'use strict';\n\n    /**\n     * Some default config\n     * @type {Object}\n     * @private\n     */\n    const _defaults = {\n        unit: 60,           // default time unit is minutes\n        deniedResources: []\n    };\n\n    /**\n     * Creates a form that manage the extra time allowed to test takers\n     *\n     * @param {Object} config\n     * @param {String} config.actionName - the action name (use in the title text)\n     * @param {Array} config.allowedResources - list of allowed resources to be displayed\n     * @param {Array} [config.deniedResources] - list of denied resources to be displayed\n     * @param {Number} [config.unit] - the time is stored in seconds, but can be handled in other time units, by default this is minutes (60)\n     * @param {Boolean} [config.changeTimeMode] - mode for change time action\n     * @fires cancel when the component is closed without validation\n     * @fires ok when the ok button is clicked\n     */\n    function timeHandlingFactory(config) {\n        const initConfig = _.defaults(config || {}, _defaults);\n        const timeUnit = initConfig.unit || _defaults.unit;\n\n        _.forEach(initConfig.allowedResources, (resource) => {\n            const remaining = parseFloat(resource.remaining) || 0;\n            const extraTime = parseFloat(resource.extraTime);\n            const consumedTime = parseFloat(resource.consumedTime);\n\n            if (remaining) {\n                resource.remainingStr = timeEncoder.encode(remaining);\n            }\n\n            resource.extraTimeStr = encodeExtraTime(extraTime, consumedTime, __('%s minutes more'), timeUnit);\n        });\n\n        return component()\n            .setTemplate(extraTimeTpl)\n            .on('render', function () {\n                const self = this;\n                const $cmp = this.getElement();\n                const $time = $cmp.find('[data-control=\"time\"]');\n                const $error = $cmp.find('.feedback-error');\n                const $ok = $cmp.find('[data-control=\"done\"]');\n                const $changeTimeControls = $cmp.find('input[name=\"changeTimeControl\"]');\n                let changeTimeOperator = '';\n                const defaultTime = 1;\n                const state = {\n                    reasons: null,\n                    comment: '',\n                    time: 0,\n                };\n\n                /**\n                 * Remove errors messages\n                 * @returns undefined\n                 */\n                function clearErrors() {\n                    const $error = $('.feedback-error', $cmp);\n                    hider.hide($error);\n                    $error.remove();\n                }\n\n                /**\n                 * Show error messages\n                 * @param {string[]} errors\n                 * @returns undefined\n                 */\n                function renderErrors(errors) {\n                    const errorMessages = [];\n\n                    if ($cmp) {\n                        errors.forEach( error => {\n                            errorMessages.push(`<div class=\"feedback-error small\">${error}</div>`);\n                        });\n\n                        $cmp.find('.errors').prepend(errorMessages.join(''));\n                        hider.show($error);\n                    }\n                }\n\n                /**\n                 * Validate the input time\n                 * @returns {Boolean}\n                 */\n                function checkInputError() {\n                    const value = $time.val().trim();\n\n                    // use Number() instead of parseInt/parseFloat to prevent number with text like \"10$$\" to be\n                    // converted to number, as we need to avoid that case\n                    const time = Number(value);\n\n                    // here we also check with the parseFloat to detect non decimal notation,\n                    // otherwise numbers like 0x10 will be accepted, but misunderstood when applied\n                    const error = isNaN(time)\n                        || time !== parseFloat(value)\n                        || (config.changeTimeMode && parseFloat(value) <= 0);\n                    const timeUnit = config.unit;\n                    const errList = [];\n                    let errs = error;\n                    let resError = error;\n\n                    // add shared error once, but update each session message\n                    _.forEach(config.allowedResources, (resource) => {\n                        if (error) {\n                            if (errList.length === 0) {\n                                errList.push(config.errorMessage);\n                            }\n                        }\n                    });\n\n                    // add messages about separated errors\n                    _.forEach(config.allowedResources, (resource) => {\n                        if (resource.timeAdjustmentLimits) {\n                            const remainingTime = Math.floor(resource.remaining_time) || 0;\n                            const limitTime = Math.floor(resource.timeAdjustmentLimits.decrease + resource.timeAdjustmentLimits.increase) || 0;\n\n                            const tooMuch = (changeTimeOperator === '')\n                                && (resource.timeAdjustmentLimits.increase !== -1)\n                                && (resource.timeAdjustmentLimits.increase < timeUnit*value);\n                            const tooFew = (changeTimeOperator === '-') && (timeUnit*value > resource.remaining_time);\n\n                            resError = error || tooMuch || tooFew;\n\n                            if (typeof remainingTime !== 'undefined') {\n                                resource.remainingStr = timeEncoder.encode(remainingTime);\n                                resource.timeLimitsStr = timeEncoder.encode(limitTime);\n                                switch (true) {\n                                    case error:\n                                        resource.errorLabel = __('Entered value is not correct');\n                                        break;\n                                    case tooFew:\n                                        errList.unshift(__('The decreased time cannot be higher than remaining time %s', resource.remainingStr));\n                                        resource.errorLabel = __('Time decrease is too high');\n                                        break;\n                                    case tooMuch:\n                                        errList.unshift(__('The increased time, when added to the remaining time, %s cannot be higher than the overall time granted for this timer %s', resource.remainingStr, resource.timeLimitsStr));\n                                        resource.errorLabel = __('Time increase is too high');\n                                        break;\n                                    default:\n                                        resource.errorLabel = '';\n                                }\n                            }\n\n                            $(`LI[data-resource=\"${resource.id}\"] .error`, $cmp).remove();\n                            if (resError) {\n                                const $resError = $('<span class=\"error\"></span>').text(' - ' + resource.errorLabel);\n                                $(`LI[data-resource=\"${resource.id}\"] .resource-label`, $cmp).append($resError);\n                            }\n\n                            errs = errs || resError;\n                        }\n                    });\n\n                    if (errs) {\n                        renderErrors(errList);\n                        focus();\n                    }\n\n                    $ok.attr('disabled', (errs || value.length === 0));\n\n                    return errs;\n                }\n\n                /**\n                 * Validates that all required fields have been filled\n                 * @param {jQuery} $container\n                 * @returns {Boolean}\n                 */\n                function checkRequiredFields($container) {\n                    return (\n                        $('select, textarea', $container).filter(function() {\n                            return $.trim($(this).val()).length === 0;\n                        }).length === 0\n                    );\n                }\n\n                function checkReasonError() {\n                    if ($cmp) {\n                        if (!checkRequiredFields($cmp)) {\n                            renderErrors([\n                                __('All fields are required')\n                            ]);\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n\n                /**\n                 * Submit the data\n                 */\n                function submit() {\n                    if (!initConfig.allowedResources.length) {\n                        $cmp.modal('close');\n                        return;\n                    }\n\n                    clearErrors();\n                    if (!checkInputError() && !checkReasonError()) {\n                        state.time = parseFloat(`${changeTimeOperator}${$time.val()}`) * timeUnit;\n                        self.trigger('ok', state);\n                        $cmp.modal('close');\n                    }\n                }\n\n                /**\n                 * Cancel the dialog\n                 */\n                function cancel() {\n                    /**\n                     * The dialog is just canceled\n                     * @event cancel\n                     */\n                    self.trigger('cancel');\n                    $cmp.modal('close');\n                }\n\n                /**\n                 * Set the focus on the input\n                 */\n                function focus() {\n                    $time.focus().select();\n                }\n\n                // we need to find the common extra time for all selected test takers\n                if (!config.changeTimeMode) {\n                    $time.val(_.reduce(initConfig.allowedResources, function(time, testTaker) {\n                        return Math.max(time, testTaker && testTaker.extraTime || 0);\n                    }, 0) / timeUnit);\n                }\n\n                $cmp\n                    .addClass('modal')\n                    .on('closed.modal', function () {\n                        self.destroy();\n                    })\n                    .on('selected.cascading-combobox', (e, reasons) => {\n                        state.reasons = reasons;\n                        self.trigger('change', state);\n                    })\n                    .on('change', 'textarea', (e) => {\n                        state.comment = $(e.currentTarget).val();\n                        self.trigger('change', state);\n                    })\n                    .on('keyup', function(event) {\n                        if (13 === event.keyCode) {\n                            submit();\n                        } else {\n                            if (\n                                event.hasOwnProperty('target')\n                                && event.target.hasOwnProperty('id')\n                                && event.target.id === 'input-extra-time') {\n                                    clearErrors();\n                                    checkInputError();\n                            }\n                        }\n                    })\n                    .on('click', '.action', function (event) {\n                        const $btn = $(event.target).closest('.action');\n                        const control = $btn.data('control');\n\n                        event.preventDefault();\n\n                        if ('done' === control) {\n                            submit();\n                        } else {\n                            cancel();\n                        }\n                    })\n                    .modal({\n                        width: 800\n                    });\n\n                if (_.isObject(this.config.categoriesSelector)) {\n                    const $reason = $cmp.find('.reason');\n                    const $reasonCategories = $reason.children('.categories');\n                    this.config.categoriesSelector\n                        .on('render', () => {\n                            if (initConfig.hasOwnProperty('predefinedReason')) {\n                                const predefinedReason = initConfig.predefinedReason;\n                                if (predefinedReason.hasOwnProperty('comment')) {\n                                    const $textarea = $('textarea', $reason);\n                                    $textarea.text(predefinedReason.comment);\n                                    $textarea.trigger('change');\n                                }\n                                if (predefinedReason.hasOwnProperty('reasons')) {\n                                    const reasons = predefinedReason.reasons;\n                                    if (reasons.hasOwnProperty('category')) {\n                                        $('select[data-id=\"category\"]', $reasonCategories)\n                                            .val(reasons.category)\n                                            .on('change', () => {\n                                                _.defer(() => {\n                                                    if (reasons.hasOwnProperty('subCategory')) {\n                                                        $('select[data-id=\"subCategory\"]', $reasonCategories)\n                                                            .val(reasons.subCategory)\n                                                            .trigger('change');\n                                                    }\n                                                })\n                                            })\n                                            .trigger('change');\n                                    }\n                                }\n                            }\n                        })\n                        .render($reasonCategories);\n                }\n\n                $time.on('input', function() {\n                    clearErrors();\n                    checkInputError();\n                });\n\n                $changeTimeControls.on('change', ({ target: { value } }) => {\n                    changeTimeOperator = value;\n                    if($time.val().length !== 0) {\n                        clearErrors();\n                        checkInputError();\n                    } else {\n                        $time.val(defaultTime);\n                    }\n                });\n\n                focus();\n            })\n            .on('destroy', function () {\n                this.getElement()\n                    .removeClass('modal')\n                    .modal('destroy');\n            })\n            .init(initConfig);\n    }\n\n    return timeHandlingFactory;\n});\n\n","\ndefine('tpl!taoProctoring/templates/delivery/monitoring', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<h1>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h1>\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"content\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.title), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"panel\\\"></div>\\n    <div class=\\\"list clearfix\\\"></div>\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoProctoring/templates/delivery/deliveryLink', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<span class=\\\"elipsis\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</span>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoProctoring/templates/delivery/statusFilter', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <option value=\\\"\";\n  if (helper = helpers.code) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.code); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<select name=\\\"filter[status]\\\" class=\\\"filter status select2\\\">\\n    <option value=\\\"\\\" selected></option>\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.statuses), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</select>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoProctoring/templates/delivery/approximatedTimer', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var stack1, self=this, functionType=\"function\", escapeExpression=this.escapeExpression;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n<span class=\\\"procotor-timer_time \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.countDown), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-remaining=\\\"\";\n  if (helper = helpers.remaining) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.remaining); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.timer) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.timer); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"countDown\";\n  }\n\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.timer), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/monitoring',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'controller/app',\n    'core/polling',\n    'core/timer',\n    'util/url',\n    'layout/loading-bar',\n    'core/encoder/time',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'ui/bulkActionPopup',\n    'ui/cascadingComboBox',\n    'ui/container',\n    'ui/datetime/picker',\n    'taoProctoring/component/proxy',\n    'taoProctoring/component/timeHandling/timeHandling',\n    'taoProctoring/component/timeHandling/encoder',\n    'taoProctoring/helper/status',\n    'tpl!taoProctoring/templates/delivery/monitoring',\n    'tpl!taoProctoring/templates/delivery/deliveryLink',\n    'tpl!taoProctoring/templates/delivery/statusFilter',\n    'moment',\n    'util/locale',\n    'tpl!taoProctoring/templates/delivery/approximatedTimer',\n    'lib/flatpickr/l10n/index',\n    'ui/datatable',\n    'select2'\n], function (\n    $,\n    _,\n    __,\n    module,\n    appController,\n    pollingFactory,\n    timerFactory,\n    urlHelper,\n    loadingBar,\n    timeEncoder,\n    encode,\n    feedback,\n    dialog,\n    bulkActionPopup,\n    cascadingComboBox,\n    containerFactory,\n    dateTimePicker,\n    proxyFactory,\n    timeHandlingPopup,\n    encodeTime,\n    _status,\n    monitoringTpl,\n    deliveryLinkTpl,\n    statusFilterTpl,\n    moment,\n    locale,\n    approximatedTimerTpl,\n    flatpickrLocalization\n) {\n    'use strict';\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-monitoring';\n\n    var terminateUrl = urlHelper.route('terminateExecutions', 'Monitor', 'taoProctoring');\n    var reactivateUrl = urlHelper.route('reactivateExecutions', 'MonitorProctorAdministrator', 'taoProctoring');\n    var pauseUrl = urlHelper.route('pauseExecutions', 'Monitor', 'taoProctoring');\n    var authorizeUrl = urlHelper.route('authoriseExecutions', 'Monitor', 'taoProctoring');\n    var extraTimeUrl = urlHelper.route('extraTime', 'Monitor', 'taoProctoring');\n    var reportUrl = urlHelper.route('reportExecutions', 'Monitor', 'taoProctoring');\n    var serviceUrl = urlHelper.route('monitor', 'Monitor', 'taoProctoring');\n    var executionsUrl = urlHelper.route('deliveryExecutions', 'Monitor', 'taoProctoring');\n    var historyUrl = urlHelper.route('index', 'Reporting', 'taoProctoring');\n    const adjustTimeUrl = urlHelper.route('adjustTime', 'Monitor', 'taoProctoring');\n\n\n    /**\n     * The extra time unit: by default in minutes\n     * @type {Number}\n     */\n    var extraTimeUnit = 60;\n\n    /**\n     * Validates the params to be sent along the provider's requests\n     * @param {object} params\n     * @returns {boolean}\n     */\n    function validateParams(params) {\n        return _.isPlainObject(params) &&\n            (_.isUndefined(params.delivery) || !_.isEmpty(params.delivery)) &&\n            (_.isUndefined(params.testCenter) || !_.isEmpty(params.testCenter)) &&\n            !_.isEmpty(params.execution);\n    }\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring delivery page\n     *\n     * @type {Object}\n     */\n    return {\n        /**\n         * Entry point of the page\n         */\n        start() {\n            var container = containerFactory().changeScope(cssScope).write(monitoringTpl());\n            var $content = container.find('.content');\n            var $list = container.find('.list');\n            var pageParams = module.config();\n            var deliveryId = pageParams.delivery;\n            var context = pageParams.context;\n            var defaultTag = pageParams.defaultTag;\n            var allowIrr = pageParams.allowIrr !== 'false';\n            var defaultAvailableLabel = __('Current sessions');\n            var dataset;\n            var extraFields;\n            var categories;\n            var originalDataset;\n            let timeHandlingMode;\n            let changeTimeMode;\n            var allowedConnectivity;\n            var printReportButton;\n            var printReportUrl;\n            var hasAccessToReactivate;\n            var tools = [];\n            var model = [];\n            var actionButtons;\n            var highlightRows = [];\n            var actionList;\n            var serviceParams = {};\n            var sessionsHistoryUrl = historyUrl;\n            var timer = timerFactory({\n                autoStart: false\n            });\n            var label;\n            var startDatePicker;\n            var dialogSettings;\n\n            var polling = pollingFactory({\n                action() {\n                    var elapsed = timer.tick() / 1000;\n                    var timers = $('.procotor-timer_time.countDown');\n                    _.forEach(timers, function (timerItem) {\n                        var remaining = $(timerItem).data('remaining');\n                        if (remaining > 0) {\n                            remaining -= elapsed;\n                            $(timerItem).html(timeEncoder.encode(Math.round(remaining)));\n                            $(timerItem).data('remaining', remaining);\n                        }\n                    });\n                },\n                interval: 1000,\n                autoStart: false\n            });\n\n            const dataPolling = pollingFactory({\n                interval: 2000,\n                autoStart: false\n            });\n\n            appController.on('change.deliveryMonitoring', function() {\n                appController.off('.deliveryMonitoring');\n                container.destroy();\n            });\n\n            proxyFactory('ajax').init({\n                actions: {\n                    read: serviceUrl,\n                    authorize: {\n                        url: authorizeUrl,\n                        validate: validateParams\n                    },\n                    pause: {\n                        url: pauseUrl,\n                        validate: validateParams\n                    },\n                    terminate: {\n                        url: terminateUrl,\n                        validate: validateParams\n                    },\n                    reactivate: {\n                        url: reactivateUrl,\n                        validate: validateParams\n                    },\n                    report: {\n                        url: reportUrl,\n                        validate: validateParams\n                    },\n                    extraTime: {\n                        url: extraTimeUrl,\n                        validate: validateParams\n                    },\n                    adjustTime: {\n                        url: adjustTimeUrl,\n                        validate: validateParams\n                    }\n                }\n            }).then(function(proxyExecutions) {\n                // request the server with a selection of test takers\n                function request(action, selection, data, message) {\n                    var params;\n                    if (selection && selection.length) {\n                        loadingBar.start();\n\n                        params = _.merge({\n                            execution: selection\n                        }, data);\n\n                        if (deliveryId) {\n                            params.delivery = deliveryId;\n                        }\n\n                        if (context) {\n                            params.testCenter = context;\n                        }\n\n                        proxyExecutions.action(action, params)\n                            .then(function() {\n                                if (message) {\n                                    feedback().success(message);\n                                }\n                                $list.trigger('reset-checkboxes');\n                                $list.datatable('refresh');\n                            })\n                            .catch(function(err) {\n                                var messageContext = '',\n                                    responseData,\n                                    unprocessed;\n\n                                if (err.response) {\n                                    responseData = err.response.data;\n                                    unprocessed = _.map(responseData.unprocessed, function (msg, id) {\n                                        var execution;\n\n                                        if (!id) {\n                                            id = msg;\n                                            msg = null;\n                                        }\n\n                                        if (msg) {\n                                            return msg;\n                                        } else {\n                                            execution = getExecutionData(id);\n\n                                            if (execution) {\n                                                return __('Session %s - %s has not been processed', execution.delivery.label, execution.start_time);\n                                            }\n                                        }\n                                    });\n\n                                    if (unprocessed.length) {\n                                        messageContext += `<br>${unprocessed.join('<br>')}`;\n                                    }\n                                    if (responseData.error) {\n                                        messageContext += `<br>${encode.html(responseData.error)}`;\n                                    }\n                                }\n                                appController.onError(err);\n                                feedback().error(`${__('Something went wrong ...')}<br>${messageContext}`, {encodeHtml: false});\n                            })\n                            .then(function() {\n                                loadingBar.stop();\n                            });\n                    }\n                }\n\n                // request the server to authorize the selected delivery executions\n                function authorize(selection) {\n                    execBulkAction('authorize', __('Authorize Session'), selection, function(sel, reason){\n                        request('authorize', sel, {reason: reason}, __('Sessions authorized'));\n                    });\n                }\n\n                // request the server to pause the selected delivery executions\n                function pause(selection) {\n                    execBulkAction('pause', __('Pause Session'), selection, function(sel, reason){\n                        request('pause', sel, {reason: reason}, __('Sessions paused'));\n                    });\n                }\n\n                // request the server to terminate the selected delivery executions\n                function terminate(selection) {\n                    execBulkAction('terminate', __('Terminate Session'), selection, function(sel, reason){\n                        request('terminate', sel, {reason: reason}, __('Sessions terminated'));\n                    });\n                }\n\n                // request the reactivate to reactivate the selected delivery executions\n                function reactivate(selection) {\n                    execBulkAction('reactivate', __('Reactivate Session'), selection, function(sel, reason){\n                        request('reactivate', sel, {reason: reason}, __('Sessions reactivated'));\n                    });\n                }\n\n                // report irregularities on the selected delivery executions\n                function report(selection) {\n                    if (allowIrr) {\n                        execBulkAction('report', __('Report Irregularity'), selection, function (sel, reason) {\n                            request('report', sel, {reason: reason}, __('Sessions reported'));\n                        });\n                    }\n                }\n\n                function terminateOrReactivateAndIrregularity(selection) {\n                    const delivery = getExecutionData(selection);\n                    const buttons = [];\n                    if (hasAccessToReactivate && canDo('reactivate', delivery)) {\n                        buttons.push({\n                            id: 'reactivate',\n                            type: 'error',\n                            label: __('Reactivate session'),\n                            icon: 'play',\n                            close: true,\n                            action() {\n                                reactivate(selection);\n                            }\n                        });\n                    }else if (canDo('terminate', delivery)) {\n                        buttons.push({\n                            id: 'terminate',\n                            type: 'error',\n                            label: __('Terminate session'),\n                            icon: 'stop',\n                            close: true,\n                            action() {\n                                terminate(selection);\n                            }\n                        });\n                    }\n\n                    if (allowIrr) {\n                        buttons.push({\n                            id: 'irregularity',\n                            type: 'info',\n                            label: __('Report irregularity'),\n                            icon: 'delivery-small',\n                            close: true,\n                            action() {\n                                report(selection);\n                            }\n                        });\n                    }\n\n                    if (buttons.length) {\n                        dialog({\n                            message: __('Please, make your selection'),\n                            autoRender: true,\n                            autoDestroy: true,\n                            buttons: buttons\n                        });\n                    }\n                }\n\n                // display the session history\n                function showHistory(selection) {\n                    var monitoringRoute = window.location.toString();\n                    var urlParams = {\n                        session: selection\n                    };\n                    if (context) {\n                        urlParams.context = context;\n                    }\n                    if (deliveryId) {\n                        urlParams.delivery = deliveryId;\n                    }\n                    appController.getRouter().redirect(urlHelper.build(sessionsHistoryUrl, urlParams)).then(function() {\n                        appController.trigger('set-referrer', monitoringRoute);\n                    }).catch(function(err){\n                        appController.onError(err);\n                    });\n                }\n\n                // print the score reports\n                function printReport(selection) {\n                    execBulkAction('print', __('Print Score'), selection, function(sel) {\n                        var params = { id: sel };\n                        if (context){\n                            params.context = context;\n                        }\n                        const url = urlHelper.route(\n                            printReportUrl.action,\n                            printReportUrl.controller,\n                            printReportUrl.extension,\n                            params\n                        );\n                        window.open(url, `printReport${JSON.stringify(sel)}`);\n                    });\n                }\n\n                function timeHandling(selection) {\n                    const _selection = listSessions('time', _.isArray(selection) ? selection : [selection]);\n                    const config = _.merge(_selection, {\n                        renderTo : $content,\n                        actionName : __('Grant Extra Time'),\n                        errorMessage: __('The extra time must be a number'),\n                        unit: extraTimeUnit, // input extra time in minutes\n                        note: __('the already granted time will be replaced by the new value'),\n                        inputLabel: __('Extra time'),\n                    });\n\n                    timeHandlingPopup(config).on('ok', function(state){\n                        const sessionsToUpdate = _selection.allowedResources.map((session) => session.id);\n\n                        request('extraTime', sessionsToUpdate, {time: state.time}, __('Extra time granted'));\n                    });\n                }\n\n                // display the time adjustment popup\n                function timeAdjustment(selection) {\n                    const _selection = _.isArray(selection) ? selection : [selection];\n                    const sessionsList = listSessions('changeTime', _selection);\n                    const actionName = 'timeAdjustment';\n                    const askForReason = (categories[actionName] && categories[actionName].categoriesDefinitions && categories[actionName].categoriesDefinitions.length);\n                    const config = Object.assign(\n                        {},\n                        sessionsList,\n                        {\n                            renderTo: $content,\n                            actionName: __('Change time'),\n                            errorMessage: __('The extra time must be a number bigger than 0'),\n                            unit: extraTimeUnit, // input extra time in minutes\n                            note: __('Already changed time will be added or subtracted by the new value.'),\n                            inputLabel: __('Change time'),\n                            changeTimeMode: true,\n                            reason : askForReason,\n                            reasonRequired: true,\n                        },\n                    );\n\n                    if (!_.isEmpty(categories[actionName])) {\n                        config.categoriesSelector = cascadingComboBox(categories[actionName]);\n                    }\n\n                    _.each(_selection, function (uri) {\n                        const deliveryExecutionData = getExecutionData(uri);\n                        if (deliveryExecutionData.hasOwnProperty('lastPauseReason')) {\n                            config['predefinedReason'] = deliveryExecutionData['lastPauseReason'];\n                        }\n                    });\n\n\n                    timeHandlingPopup(config)\n                        .on('ok', (state) => {\n                            request(\n                                'adjustTime',\n                                sessionsList.allowedResources.map(({ id }) => id),\n                                state,\n                                __('Time adjusted'),\n                            );\n                        });\n                }\n\n                /**\n                 * Check if an action is available for a provided delivery with respect to the provided state\n                 * @param {String} what\n                 * @param {Object} delivery\n                 * @returns {Boolean}\n                 */\n                function canDo(what, delivery) {\n                    if (delivery && delivery.state && delivery.state.status) {\n                        const status = _status.getStatusByCode(delivery.state.status);\n                        const isAllowed = _.isFunction(status.can[what]) ?status.can[what](delivery) : status.can[what];\n\n                        return status && isAllowed === true;\n                    }\n                    return false;\n                }\n\n                /**\n                 * Verify and reformat test taker data for the execBulkAction's need\n                 * @param {Object} testTakerData\n                 * @param {String} actionName\n                 * @returns {Object}\n                 */\n                function verifyDelivery(testTakerData, actionName){\n                    var deliveryName, formatted, status;\n\n                    if (_.isObject(testTakerData.delivery)) {\n                        deliveryName = testTakerData.delivery.label;\n                    } else {\n                        deliveryName = testTakerData.delivery;\n                    }\n                    //decode all accent character\n                    deliveryName = $(\"<div/>\").html(deliveryName).text();\n                    formatted = {\n                        id : testTakerData.id,\n                        label: `${deliveryName} [${testTakerData.start_time}] ${testTakerData.test_taker_first_name} ${testTakerData.test_taker_last_name}`\n                    };\n                    status = _status.getStatusByCode(testTakerData.state.status);\n\n                    if(status){\n                        formatted.allowed = (canDo(actionName, testTakerData) === true);\n\n                        if (actionName === 'changeTime') {\n                            formatted.allowed = testTakerData.allowTimerAdjustment;\n                        }\n\n                        if(!formatted.allowed){\n                            formatted.reason = _.isFunction(status.can[actionName])? status.can[actionName](testTakerData) : status.can[actionName];\n                            formatted.warning = status.warning[actionName] ?\n                                status.warning[actionName](null, testTakerData.id) :\n                                __('Unable to perform action on test %s.', testTakerData.id);\n                        }\n                    }\n                    if (testTakerData.timer) {\n                        formatted.extraTime = testTakerData.timer.extraTime;\n                        formatted.consumedTime = testTakerData.timer.consumedExtraTime;\n                        formatted.remaining_time = testTakerData.timer.remaining_time;\n                        formatted.adjustedTime = testTakerData.timer.adjustedTime;\n                        formatted.approximatedRemaining = testTakerData.timer.approximatedRemaining;\n                        formatted.countDown = testTakerData.timer.countDown;\n                        formatted.extendedTime = testTakerData.timer.extendedTime;\n                        formatted.lastActivity = testTakerData.timer.lastActivity;\n                        formatted.timeAdjustmentLimits = testTakerData.timer.timeAdjustmentLimits;\n                    }\n                    return formatted;\n                }\n\n                /**\n                 * Find the execution row data from its uri\n                 *\n                 * @param {String} uri\n                 * @returns {Object}\n                 */\n                function getExecutionData(uri){\n                    return _.find(dataset.data, {id : uri});\n                }\n\n                /**\n                 * Gets the list of allowed and forbidden test sessions from the provided selection\n                 * @param {String} actionName\n                 * @param {Array} selection\n                 * @returns {Object} Returns the config object that contains the lists of allowed and forbidden test sessions\n                 */\n                function listSessions(actionName, selection) {\n                    var allowedDeliveries = [];\n                    var forbiddenDeliveries = [];\n\n                    _.each(selection, function (uri) {\n                        var testTakerData = getExecutionData(uri);\n                        var checkedDelivery;\n                        if(testTakerData){\n                            checkedDelivery = verifyDelivery(testTakerData, actionName);\n                            if(checkedDelivery.allowed){\n                                allowedDeliveries.push(checkedDelivery);\n                            }else{\n                                forbiddenDeliveries.push(checkedDelivery);\n                            }\n                        }\n                    });\n\n                    return {\n                        resourceType : __('session'),\n                        resourceTypes: __('sessions'),\n                        allowedResources: allowedDeliveries,\n                        deniedResources: forbiddenDeliveries\n                    };\n                }\n\n                /**\n                 * Exec\n                 * @param {String} actionName\n                 * @param {String} actionTitle\n                 * @param {Array|String} selection\n                 * @param {Function} cb\n                 * @returns {undefined}\n                 */\n                function execBulkAction(actionName, actionTitle, selection, cb){\n                    var _selection = _.isArray(selection) ? selection : [selection];\n                    var askForReason = (categories[actionName] && categories[actionName].categoriesDefinitions && categories[actionName].categoriesDefinitions.length);\n                    var config = _.merge(listSessions(actionName, _selection), {\n                        renderTo : $content,\n                        actionName : actionTitle,\n                        reason : askForReason,\n                        reasonRequired: true,\n                    });\n\n                    if (dialogSettings && dialogSettings[actionName]) {\n                        config.message = dialogSettings[actionName].message;\n                        config.icon = dialogSettings[actionName].icon;\n                    }\n\n                    if (!_.isEmpty(categories[actionName])) {\n                        config.categoriesSelector = cascadingComboBox(categories[actionName]);\n                    }\n\n                    if (!config.allowedResources.length) {\n                        feedback().warning(_status.buildWarningMessage(actionName, _selection, config.deniedResources));\n                    } else {\n                        bulkActionPopup(config).on('ok', function(reason){\n                            //execute callback\n                            if(_.isFunction(cb)){\n                                cb(config.allowedResources.map(res => res.id), reason);\n                            }\n                        });\n                    }\n                }\n\n                /**\n                 * Return html for filter\n                 * @returns {String}\n                 */\n                function buildStatusFilter(){\n                    return statusFilterTpl({statuses: _status.getStatuses()});\n                }\n\n                /**\n                 * Prepare data to be sent on server + internal state saving\n                 * @param {Boolean} applyTags\n                 */\n                function setTagUsage(applyTags) {\n                    var $filter;\n                    if (defaultTag) {\n\n                        if (!$list.find('.tag').length) {\n                            $filter = $(`<span class=\"filter\"><input type=\"hidden\" name=\"tag\" class=\"tag\" value=\"${applyTags}\"/></span>`);\n                            $filter.appendTo($list);\n                        }\n\n                        $list.find('.tag').val(applyTags);\n                        $list.data('applytags', applyTags);\n\n                        if (applyTags) {\n                            $list.find('.action-bar').children('.tool-tag').hide();\n                        } else {\n                            $list.find('.action-bar').children('.tool-notag').hide();\n                        }\n                    }\n                }\n\n                function getTagsUsage() {\n                    return $list.data('applytags');\n                }\n\n                /**\n                 * Set initial datatable filters\n                 */\n                function setInitialFilters() {\n                    if (defaultTag) {\n                        setTagUsage(true);\n                    }\n                }\n\n                /**\n                 * Additional action perfomed with filter element\n                 * @param {jQueryElement} $el\n                 */\n                function statusFilterHandler($el) {\n                    $el.select2({\n                        dropdownAutoWidth: true,\n                        placeholder: __('Filter'),\n                        minimumResultsForSearch: Infinity,\n                        allowClear: true\n                    });\n                }\n\n                /**\n                 * Detects document language\n                 * @returns {\"\"|string}\n                 */\n                function getPageLang() {\n                    const documentLang = window.document.documentElement.getAttribute('lang');\n                    return documentLang && documentLang.split('-')[0];\n                }\n\n                /**\n                 * Return the default date range of one day\n                 * @returns {string}\n                 */\n                function getDefaultStartTimeFilter() {\n                    const dateFormat = locale.getDateTimeFormat().split(' ')[0];\n                    let separator = ' - ';\n                    const lang = getPageLang();\n                    if (_.isObject(flatpickrLocalization.default[lang])) {\n                        const flatpickrLang = flatpickrLocalization.default[lang];\n                        if (flatpickrLang.hasOwnProperty('rangeSeparator')) {\n                            separator = flatpickrLang.rangeSeparator;\n                        }\n                    }\n                    return `${moment().format(dateFormat)} ${separator} ${moment().add('1', 'd').format(dateFormat)}`;\n                }\n\n                function extractOption(object, option, defaultValue) {\n                    return _.isUndefined(object[option], undefined) ? defaultValue : object[option];\n                }\n\n                function startPollingData(pollingInterval, ajaxConfig) {\n                    stopPollingData();\n\n                    dataPolling.setAction(function (process) {\n                        const action = process.async();\n\n                        $.ajax(ajaxConfig)\n                            .then(response => {\n                                $list.datatable('refresh', response);\n                                action.resolve();\n                            })\n                            .fail(action.resolve);\n                        });\n\n                    dataPolling.setInterval(pollingInterval);\n                    dataPolling.start();\n                }\n\n                function stopPollingData() {\n                    dataPolling.stop();\n                }\n\n                if (deliveryId) {\n                    serviceParams.delivery = deliveryId;\n                }\n                if (context) {\n                    serviceParams.context = context;\n                }\n\n                return proxyExecutions.read(serviceParams).then(function(data) {\n                    dataset = data.set;\n                    extraFields = data.extrafields;\n                    categories = data.categories;\n                    deliveryId = data.delivery || deliveryId;\n                    context = data.context || context;\n                    timeHandlingMode = data.timeHandling === 'extra_time';\n                    changeTimeMode = data.timeHandling === 'timer_adjustment';\n                    allowedConnectivity = data.onlineStatus || false;\n                    printReportButton = data.printReportButton;\n                    printReportUrl = data.printReportUrl;\n                    hasAccessToReactivate = data.hasAccessToReactivate;\n                    sessionsHistoryUrl = data.historyUrl || historyUrl;\n                    dialogSettings = data.dialogSettings;\n\n                    var showColumnFirstName = extractOption(data, 'showColumnFirstName', true);\n                    var showColumnLastName = extractOption(data, 'showColumnLastName', true);\n                    var showColumnAuthorize = extractOption(data, 'showColumnAuthorize', true);\n                    var showColumnRemainingTime = extractOption(data, 'showColumnRemainingTime', true);\n                    var showColumnExtendedTime = extractOption(data, 'showColumnExtendedTime', true);\n                    var showActionShowHistory = extractOption(data, 'showActionShowHistory', true);\n                    var setStartDataOneDay = extractOption(data, 'setStartDataOneDay', true);\n\n                    if (deliveryId) {\n                        serviceParams.delivery = deliveryId;\n                    }\n                    if (context) {\n                        serviceParams.context = context;\n                    }\n\n                    /**\n                     * configurable parameter to show button\n                     */\n                    if (data.refreshBtn) {\n                        // tool: page refresh\n                        tools.push({\n                            id: 'refresh',\n                            icon: 'reset',\n                            title: __('Refresh the page'),\n                            label: __('Refresh'),\n                            action() {\n                                $list.trigger('reset-checkboxes');\n                                $list.datatable('refresh');\n                            }\n                        });\n                    }\n\n                    if (defaultTag) {\n                        tools.push({\n                            id: 'notag',\n                            icon: 'filter',\n                            css: 'btn-warning',\n                            label: __('Remove default tag filtering'),\n                            title: __('Remove default tag filtering'),\n                            action() {\n                                setTagUsage(false);\n                                $list.datatable('filter');\n                            }\n                        });\n                        tools.push({\n                            id: 'tag',\n                            icon: 'filter',\n                            title: __('Apply default tag'),\n                            label: __('Apply default tag'),\n                            action() {\n                                setTagUsage(true);\n                                $list.datatable('filter');\n                            }\n                        });\n                    }\n\n                    // tool: authorize the executions\n                    tools.push({\n                        id: 'authorize',\n                        icon: 'play',\n                        title: __('Authorize sessions'),\n                        label: __('Authorize'),\n                        massAction: true,\n                        action: authorize\n                    });\n\n                    if(data.canPause === null || data.canPause){\n                        // tool: pause the executions\n                        tools.push({\n                            id: 'pause',\n                            icon: 'pause',\n                            title: __('Pause sessions'),\n                            label: __('Pause'),\n                            massAction: true,\n                            action: pause\n                        });\n                    }\n\n                    // tool: terminate the executions\n                    tools.push({\n                        id: 'terminate',\n                        icon: 'stop',\n                        title: __('Terminate sessions'),\n                        label: __('Terminate'),\n                        massAction: true,\n                        action: terminate\n                    });\n\n                    if (allowIrr) {\n                        // tool: report irregularities\n                        tools.push({\n                            id: 'irregularity',\n                            icon: 'delivery-small',\n                            title: __('Report irregularities'),\n                            label: __('Report'),\n                            massAction: true,\n                            action: report\n                        });\n                    }\n\n                    // tools: print results\n                    if (printReportButton) {\n                        tools.push({\n                            id : 'printReport',\n                            title : __('Print the assessment results'),\n                            icon : 'result',\n                            label : __('Print Results'),\n                            massAction: true,\n                            action : printReport\n                        });\n                    }\n\n                    // tools: handles the session time\n                    if (timeHandlingMode) {\n                        tools.push({\n                            id : 'timeHandling',\n                            title : __('Session time handling'),\n                            icon : 'time',\n                            label : __('Time'),\n                            massAction: true,\n                            action : timeHandling\n                        });\n                    }\n\n                    // tools: adjust the session time\n                    if (changeTimeMode) {\n                        tools.push({\n                            id : 'timeAdjustment',\n                            title : __('Session time handling'),\n                            icon : 'time',\n                            label : __('Time'),\n                            massAction: true,\n                            action : timeAdjustment,\n                        });\n                    }\n\n                    // column: delivery (only for all deliveries view)\n                    model.push({\n                        id: 'deliveryLabel',\n                        label: __('Session'),\n                        sortable : true,\n                        transform(value, row) {\n                            var delivery = row && row.delivery;\n                            if (delivery) {\n                                value = deliveryLinkTpl(delivery);\n                            }\n                            return value;\n                        }\n                    });\n\n                    // column: test taker first name\n                    if (showColumnFirstName) {\n                        model.push({\n                            id: 'test_taker_first_name',\n                            label: __('First name'),\n                            filterable: true,\n                            sortable: true,\n                            transform(value, row) {\n                                return row && row.testTaker && row.testTaker.test_taker_first_name || '';\n                            }\n                        });\n                    }\n\n                    // column: test taker last name\n                    if (showColumnLastName) {\n                        model.push({\n                            id: 'test_taker_last_name',\n                            label: __('Last name'),\n                            filterable: true,\n                            sortable: true,\n                            transform(value, row) {\n                                return row && row.testTaker && row.testTaker.test_taker_last_name || '';\n                            }\n                        });\n                    }\n\n                    //extra fields\n                    _.each(extraFields, function(extraField){\n                        model.push({\n                            id : extraField.id,\n                            label: extraField.label,\n                            filterable: extraField.filterable,\n                            sortable : true,\n                            order: extraField.columnPosition,\n                            transform(value, row) {\n                                return row && row.extraFields && row.extraFields[extraField.id] || '';\n                            }\n                        });\n                    });\n\n                    // column: start time\n                    model.push({\n                        id: 'start_time',\n                        sortable: true,\n                        label: __('Started at'),\n                        filterable : true,\n                        transform(value) {\n                            return locale.formatDateTime(value);\n                        },\n                        filterTransform(value) {\n                            var dateFormat = locale.getDateTimeFormat().split(' ')[0];\n                            var values = value.split(' ');\n                            var result = '';\n\n                            const start_day = values[0];\n                            const last_day = values[values.length - 1];\n                            if (start_day && last_day) {\n                                result += moment(start_day, dateFormat).format('X');\n                                result += ' - ';\n                                result += moment(last_day, dateFormat).add(1, 'd').format('X');\n                            }\n\n                            return result;\n                        },\n                        customFilter : {\n                            template : `<input type=\"text\" id=\"start_time_filter\" name=\"filter[start_time]\" placeholder=\"${__('Filter')}\"/>`,\n                            callback($elt) {\n                                var $filterContainer = $elt.closest('.filter');\n                                var dateFormat = locale.getDateTimeFormat().split(' ');\n                                var dateFormatStr = dateFormat[0];\n\n                                // the date time picker won't display otherwise\n                                $filterContainer.css('position', 'static');\n\n                                if (startDatePicker) {\n                                    startDatePicker.destroy();\n                                }\n\n                                startDatePicker = dateTimePicker($filterContainer, {\n                                    setup: 'date-range',\n                                    format: dateFormatStr,\n                                    replaceField: $elt[0],\n                                })\n                                    .on('close', function () {\n                                        const selection = this.getSelectedDates();\n                                        if (selection.length === 2) {\n                                            $list.datatable('filter');\n                                        }\n                                    })\n                                    .on('clear', function () {\n                                        $list.datatable('filter');\n                                    });\n                            }\n                        },\n                    });\n\n                    // column: delivery execution status\n                    model.push({\n                        id: 'status',\n                        label: __('Status'),\n                        sortable: true,\n                        filterable: true,\n                        customFilter: {\n                            template: buildStatusFilter(),\n                            callback: statusFilterHandler\n                        },\n\n                        transform(value, row) {\n                            var result = '',\n                                status;\n\n                            if (row && row.state && row.state.status) {\n                                status = _status.getStatusByCode(row.state.status);\n                                if (status) {\n                                    result = status.label;\n                                    if (row.state.status === __('INPROGRESS')) {\n                                        result = status.label;\n                                    }\n                                    if (result === __('Awaiting')) {\n                                        highlightRows.push(row.id);\n                                    }\n                                }\n                            }\n                            return result;\n                        }\n                    });\n\n                    // action: authorize the execution\n                    if (showColumnAuthorize) {\n                        model.push({\n                            id: 'authorizeCl',\n                            label: __('Authorize'),\n                            type: 'actions',\n                            actions: [{\n                                id: 'authorize',\n                                icon: 'play',\n                                title: __('Authorize session'),\n                                disabled() {\n                                    return !canDo('authorize', this);\n                                },\n                                action: authorize\n                            }]\n                        });\n                    }\n\n                    if(data.canPause === null || data.canPause) {\n                        // action: pause the execution\n                        model.push({\n                            id: 'pauseCl',\n                            label: __('Pause'),\n                            type: 'actions',\n                            actions: [{\n                                id: 'pause',\n                                icon: 'pause',\n                                title: __('Pause session'),\n                                disabled() {\n                                    return !canDo('pause', this);\n                                },\n                                action: pause\n                            }]\n                        });\n                    }\n\n                    // column: remaining time\n                    if (showColumnRemainingTime) {\n                        model.push({\n                            id: 'remaining_time',\n                            sortable: true,\n                            sorttype: 'numeric',\n                            label: __('Remaining'),\n                            transform(value, row) {\n                                var rowTimer = _.isObject(row.timer) ? row.timer : {};\n                                var refinedValue = rowTimer.approximatedRemaining ? rowTimer.approximatedRemaining : rowTimer.remaining_time;\n                                var remaining = parseInt(refinedValue, 10);\n                                if (remaining || _.isFinite(remaining)) {\n                                    if (remaining < 0) {\n                                        if (rowTimer.extraTime && rowTimer.consumedExtraTime) {\n                                            rowTimer.consumedExtraTime += -remaining;\n                                        }\n                                        remaining = 0;\n                                    }\n                                    if (remaining) {\n                                        if (rowTimer.extraTime && rowTimer.consumedExtraTime) {\n                                            remaining -= rowTimer.consumedExtraTime;\n                                        }\n                                        refinedValue = timeEncoder.encode(remaining);\n                                    } else {\n                                        refinedValue = '';\n                                    }\n\n                                    refinedValue = approximatedTimerTpl({\n                                        timer: refinedValue,\n                                        remaining: remaining,\n                                        countDown: rowTimer.countDown\n                                    });\n                                }\n\n                                return refinedValue;\n                            }\n                        });\n                    }\n                    if (timeHandlingMode) {\n                        model.push({\n                            id: 'extraTime',\n                            label: __('Extra Time'),\n                            type: 'actions',\n                            actions: [{\n                                id : 'timeHandling',\n                                title : __('Session time handling'),\n                                icon : 'time',\n                                action : timeHandling,\n                                hidden() {\n                                    const allowExtraTime = _.isNull(this.allowExtraTime) || this.allowExtraTime;\n                                    return !canDo('time', this) || !allowExtraTime;\n                                }\n                            }]\n                        });\n                    }\n                    if (changeTimeMode) {\n                        model.push({\n                            id: 'adjustTime',\n                            label: __('Change time'),\n                            type: 'actions',\n                            actions: [{\n                                id : 'timeHandling',\n                                title : __('Session time handling'),\n                                icon : 'time',\n                                action : timeAdjustment,\n                                disabled() {\n                                    return !this.allowTimerAdjustment;\n                                }\n                            }]\n                        });\n                    }\n                    if (showColumnExtendedTime) {\n                        model.push({\n                            id: 'extendedTime',\n                            label: __('Changed Time'),\n                            transform(value, row) {\n                                const state = [];\n                                const timer = _.isObject(row.timer) ? row.timer : {};\n                                const { adjustedTime, extendedTime, extraTime } = timer\n\n                                if (extendedTime) {\n                                    state.push(`${__('Extended time')}: x${extendedTime}`);\n                                }\n                                if (extraTime) {\n                                    state.push(`${__('Extra')}: ${timeEncoder.encode(extraTime)}`);\n                                }\n                                if (adjustedTime) {\n                                    state.push(`${__('Adjusted')}: ${adjustedTime > 0 ? '' : '-'}${timeEncoder.encode(Math.abs(adjustedTime))}`);\n                                }\n                                return state.join('<br />');\n                            }\n                        });\n                    }\n\n                    if (allowedConnectivity) {\n                        // column: connectivity status of execution progress\n                        model.push({\n                            id: 'last_connect',\n                            sortable: true,\n                            label: __('Connectivity'),\n                            transform(value, row) {\n                                if (row.state.status === _status.STATUS_INPROGRESS) {\n                                    return row.online ? __('online') : __('offline');\n                                }\n                                return '';\n                            }\n                        });\n                    }\n\n                    // column: delivery execution progress\n                    model.push({\n                        id: 'progress',\n                        label: __('Progress'),\n                        transform(value, row) {\n                            return row && row.state && row.state.progress || '' ;\n                        }\n                    });\n\n                    label = __('Terminate');\n                    if (allowIrr) {\n                        label = __('Terminate and irregularity');\n                        if (hasAccessToReactivate) {\n                            label = __('Terminate/Reactivate and irregularity');\n                        }\n                    } else if (hasAccessToReactivate) {\n                        label = __('Terminate/Reactivate');\n                    }\n\n                    // column: proctoring actions\n                    actionList = [{\n                        id: 'terminateOrReactivateAndIrregularity',\n                        icon: 'delivery-small',\n                        title: label,\n                        disabled: true,\n                        action: terminateOrReactivateAndIrregularity\n                    }];\n\n                    if (showActionShowHistory) {\n                        actionList.push({\n                            id: 'history',\n                            icon: 'history',\n                            title: __('Show the detailed session history'),\n                            action: showHistory\n                        });\n                    }\n\n                    if (printReportButton) {\n                        actionList.push({\n                            id : 'printReport',\n                            title : __('Print the assessment results'),\n                            icon : 'result',\n                            action : printReport\n                        });\n                    }\n\n                    model.push({\n                        id: 'administrationCl',\n                        label: __('Administration'),\n                        type: 'actions',\n                        actions: actionList\n                    });\n\n                    // renders the datatable\n                    $list\n                        .on('query.datatable', function(event, ajaxConfig) {\n                            loadingBar.start();\n                            highlightRows = [];\n\n                            const isPollingAvailable = data.autoRefresh && ajaxConfig;\n\n                            if (isPollingAvailable) {\n                                startPollingData(data.autoRefresh, ajaxConfig);\n                            }\n                        })\n                        .on('beforeload.datatable', (e, dataSet) => {\n                            // We save response data here because on load the data will be transformed\n                            originalDataset = dataSet;\n                            highlightRows = [];\n                        })\n                        .on('load.datatable', function(e, newDataset) {\n                            if (newDataset.data) {\n                                newDataset.data.forEach(session => {\n                                    session.test_taker_first_name = session.test_taker_first_name ? $('<div>').html(session.test_taker_first_name).text() : undefined;\n                                    session.test_taker_last_name = session.test_taker_last_name ? $('<div>').html(session.test_taker_last_name).text() : undefined;\n                                })\n                            }                            \n                            var applyTags;\n\n                            //update dateset in memory\n                            dataset = newDataset;\n\n                            // activate irregularity buttons\n                            $('.terminateOrReactivateAndIrregularity', $list).each((ind, btn) => {\n                                const $btn = $(btn);\n                                const uri = $btn.closest('[data-item-identifier]').data('item-identifier');\n                                const delivery = getExecutionData(uri);\n                                if (\n                                  hasAccessToReactivate && canDo('reactivate', delivery)\n                                      || canDo('terminate', delivery)\n                                      || allowIrr\n                                ) {\n                                    $btn.prop('disabled', false);\n                                }\n                            });\n\n                            //update the buttons, which have been reconstructed\n                            actionButtons = _({\n                                authorize : $list.find('.action-bar').children('.tool-authorise'),\n                                pause : $list.find('.action-bar').children('.tool-pause'),\n                                terminate : $list.find('.action-bar').children('.tool-terminate'),\n                                report : $list.find('.action-bar').children('.tool-irregularity')\n                            });\n\n                            if (defaultTag) {\n                                applyTags = $list.data('applytags');\n                                applyTags = !_.isUndefined(applyTags) ? applyTags : true;\n                                setTagUsage(applyTags);\n                            }\n\n                            $list.datatable('highlightRows', highlightRows);\n                            loadingBar.stop();\n\n                            appController\n                                .off('change.polling')\n                                .on('change.polling', function () {\n                                    polling.stop();\n                                });\n\n                            $list.off('reset-checkboxes').on('reset-checkboxes', function(a) {\n                                const $checkboxes = $list.find('td.checkboxes input');\n                                const $checkAll = $list.find('th.checkboxes input');\n\n                                $checkAll.prop('checked', false);\n                                $checkboxes.prop('checked', false);\n                            });\n\n                            polling.start();\n                            timer.resume();\n                        })\n                        .on('select.datatable', function() {\n                            //hide all controls then display each required one individually\n                            actionButtons.each(function($btn){\n                                $btn.hide();\n                            });\n                            _($list.datatable('selection')).map(function(uri){\n                                var row = getExecutionData(uri);\n                                return row.state.status;\n                            }).uniq().each(function(statusCode){\n                                var status = _status.getStatusByCode(statusCode);\n                                actionButtons.forIn(function($btn, action){\n                                    if(status && status.can[action] === true){\n                                        $btn.show();\n                                    }\n                                });\n                            });\n                        }).on('error.datatable', function(e, err){\n                            appController.onError(err);\n                        }).datatable({\n                            url: urlHelper.build(executionsUrl, serviceParams),\n                            status: {\n                                empty: __('No sessions'),\n                                available() {\n                                    return getTagsUsage() ? __(\"Groups: %s. %s\", defaultTag.split(',').join(', '), defaultAvailableLabel) : defaultAvailableLabel;\n                                },\n                                loading: __('Loading')\n                            },\n                            atomicUpdate: !!data.autoRefresh,\n                            filterStrategy: 'multiple',\n                            filterSelector: 'select, input:not(.select2-input, .select2-focusser)',\n                            filtercolumns: {start_time: (setStartDataOneDay ? getDefaultStartTimeFilter() : '')},\n                            filter: true,\n                            tools: tools,\n                            model: model,\n                            selectable: true,\n                            sortorder: 'desc',\n                            sortby : 'start_time',\n                            pageSizeSelector: true,\n                        }, dataset);\n\n                    setInitialFilters();\n                });\n            }).catch(function(err) {\n                appController.onError(err);\n                loadingBar.stop();\n            });\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/testTakers',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'taoProctoring/component/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-testtakers';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the ProctorDelivery test takers assign page\n     *\n     * @type {Object}\n     */\n    var proctorDeliveryAssignCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var deliveryId = $container.data('delivery');\n            var testCenterId = $container.data('testcenter');\n            var serviceUrl = helpers._url('availableTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n            var assignUrl = helpers._url('assignTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n            var managerUrl = helpers._url('manage', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n\n            var bc = breadcrumbsFactory($container, crumbs);\n\n            // send the selection to the server and redirect to the index page\n            var assign = function(selection) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: assignUrl,\n                        data: {\n                            testtaker: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            feedback().success(__('Test takers have been added'));\n                            window.location.href = managerUrl;\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function(event, response) {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No available test takers to assign'),\n                        available: __('Available test takers'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'back',\n                        icon: 'left',\n                        title: __('Return to the session manager'),\n                        label: __('Back'),\n                        action: function() {\n                            window.location.href = managerUrl;\n                        }\n                    }, {\n                        id: 'refresh',\n                        icon: 'reset',\n                        title: __('Refresh the page'),\n                        label: __('Refresh'),\n                        action: function() {\n                            $list.datatable('refresh');\n                        }\n                    }, {\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign the selected test takers to the session'),\n                        label: __('Assign the selected test takers'),\n                        massAction: true,\n                        action: function(selection) {\n                            assign(selection);\n                        }\n                    }],\n                    actions: [{\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign the test taker to the session'),\n                        action: function(id) {\n                            assign([id]);\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'firstname',\n                        label: __('First name')\n                    }, {\n                        id: 'lastname',\n                        label: __('Last name')\n                    }, {\n                        id: 'identifier',\n                        label: __('Identifier')\n                    }]\n                }, dataset);\n        }\n    };\n\n    return proctorDeliveryAssignCtlr;\n});\n\n","\ndefine('tpl!taoProctoring/templates/deliveryServer/authorizationSuccess', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<span class=\\\"success-message\\\">\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"<span class=\\\"icon-result-ok\\\"></span></span>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoProctoring/templates/deliveryServer/authorizationListBoxActions', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType=\"function\";\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <span class=\\\"action cancel js-cancel\\\" tabindex=\\\"0\\\" role=\\\"button\\\">\\n        <span class=\\\"action-control\\\">\\n            <span class=\\\"icon-stop\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cancel\", options) : helperMissing.call(depth0, \"__\", \"Cancel\", options)))\n    + \"\\n        </span>\\n    </span>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<span class=\\\"listbox-actions\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.cancelable), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <span class=\\\"action play js-proceed\\\" data-delivery=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" tabindex=\\\"0\\\" role=\\\"button\\\">\\n        <span class=\\\"action-control\\\">\\n            <span class=\\\"icon-play\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Proceed\", options) : helperMissing.call(depth0, \"__\", \"Proceed\", options)))\n    + \"\\n        </span>\\n    </span>\\n</span>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoProctoring/templates/deliveryServer/authorizationEntryPoint', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"entry-point-box authorization-container\\\">\\n    <div class=\\\"block entry-point entry-point-all-deliveries\\\">\\n        <h1>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h1>\\n        <p class=\\\"authorization-status\\\" aria-label=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Authorization status\", options) : helperMissing.call(depth0, \"__\", \"Authorization status\", options)))\n    + \"\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Please wait, authorization in process ...\", options) : helperMissing.call(depth0, \"__\", \"Please wait, authorization in process ...\", options)))\n    + \"</p>\\n        <div class=\\\"authorization-actions clearfix\\\"></div>\\n    </div>\\n</div>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/DeliveryServer/awaiting',[\n    'lodash',\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'ui/dialog/alert',\n    'core/polling',\n    'taoQtiTest/testRunner/resumingStrategy/keepAfterResume',\n    'ui/dialog/confirm',\n    'tpl!taoProctoring/templates/deliveryServer/authorizationSuccess',\n    'tpl!taoProctoring/templates/deliveryServer/authorizationListBoxActions',\n    'tpl!taoProctoring/templates/deliveryServer/authorizationEntryPoint',\n    'util/clipboard',\n    'ui/component',\n], function (_, $, __, helpers, loadingBar, dialogAlert, polling, keepAfterResume, dialogConfirm, authSuccessTpl, listBoxActionsTpl, authorizationEntryPointTpl, clipboard) {\n    'use strict';\n\n    /**\n     * The polling delay used to refresh the list\n     * @type {Number}\n     */\n    const refreshPolling = 10 * 1000; // once every 10 seconds\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    const cssScope = '.awaiting-authorization';\n\n    /**\n     * Controls the ProctorDelivery index page\n     *\n     * @type {Object}\n     */\n    const awaitingAuthorizationCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start: function start(config) {\n            const $container = $(cssScope);\n            const isAuthorizedUrl = helpers._url('isAuthorized', 'DeliveryServer', 'taoProctoring', { deliveryExecution: config.deliveryExecution });\n            const runDeliveryUrl = config.runDeliveryUrl;\n            const spaceEnterKeyCodes = [13, 32];\n\n            $container.html(authorizationEntryPointTpl({ label: config.deliveryLabel }));\n            $container\n                .find('.authorization-actions')\n                .html(listBoxActionsTpl({ id: config.deliveryExecution, cancelable: config.cancelable }));\n\n            const $content = $container.find('.authorization-status');\n            const $proccedButton = $container.find('.js-proceed');\n            let deliveryStarted = false;\n\n            const runDelivery = () => {\n                loadingBar.start();\n\n                // make sure that the delivery is still allowed (before redirect)\n                $.get(isAuthorizedUrl, (result) => {\n                    if (!result.success) {\n                        if (result.message) {\n                            dialogAlert(result.message, exit);\n                        } else {\n                            dialogAlert(__('Unexpected response'), exit);\n                        }\n                    } else if (result.authorized) {\n                        clipboard.clean();\n                        deliveryStarted = true;\n                        window.location.href = runDeliveryUrl;\n                    } else {\n                        dialogAlert(__('Unexpected response'), exit);\n                    }\n                });\n            };\n\n            const isRunnable = () => {\n                return !$container.hasClass('authorization-in-progress') && !deliveryStarted;\n            };\n\n            /**\n             * Function to be called when the delivery execution has been authorized\n             */\n            const authorized = () => {\n                $content.html(authSuccessTpl({ message: __('Authorized, you may proceed') }));\n                loadingBar.stop();\n                $container.addClass('authorization-granted').removeClass('authorization-in-progress');\n\n                // Enable procced button proccedButton\n                $proccedButton.removeClass('dissabled-action');\n                $proccedButton.attr('aria-disabled', false);\n            }\n\n            /**\n             * Goes back to the delivery index\n             */\n            const exit = () => {\n                window.location.href = config.returnUrl;\n            }\n\n            // Disable procced button proccedButton\n            $proccedButton.addClass('dissabled-action');\n            $proccedButton.attr('aria-disabled', true);\n\n            // we need to reset the local timer to avoid loss of time inside the assessment test session\n            keepAfterResume().reset();\n\n            loadingBar.start(false);\n\n            $container.on('click', '.js-cancel', () => {\n                dialogConfirm(\n                    __('Are you sure you want to end the test?'),\n                    function () {\n                        window.location.href = config.cancelUrl;\n                    }\n                );\n            });\n\n            $container.on('keyup', '.js-cancel', (e) => {\n                if (spaceEnterKeyCodes.includes(e.which)) {\n                    dialogConfirm(\n                        __('Are you sure you want to end the test?'),\n                        function () {\n                            window.location.href = config.cancelUrl;\n                        }\n                    );\n                }\n            });\n\n            $container.on('click', '.js-proceed', () => {\n                if (isRunnable()) {\n                    runDelivery();\n                }\n\n                return false;\n            });\n\n            $container.on('keyup', '.js-proceed', (e) => {\n                if (spaceEnterKeyCodes.includes(e.which)) {\n                    if (isRunnable()) {\n                        runDelivery();\n                    }\n                }\n\n                return false;\n            });\n\n            polling({\n                action: function () {\n                    const async = this.async();\n\n                    $.get(isAuthorizedUrl, (result) => {\n                        let stop = false;\n\n                        if (!result.success) {\n                            stop = true;\n\n                            if (result.message) {\n                                dialogAlert(result.message, exit);\n                            } else {\n                                dialogAlert(__('Unexpected response'), exit);\n                            }\n                        } else if (result.authorized) {\n                            stop = true;\n\n                            authorized();\n                        }\n\n                        if (stop) {\n                            async.reject();\n                        } else {\n                            async.resolve();\n                        }\n                    });\n                },\n                interval: refreshPolling,\n                autoStart: true\n            })\n                // Trigger the action immediately\n                .next();\n        }\n    };\n\n    return awaitingAuthorizationCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\ndefine('taoProctoring/controller/Irregularity/index',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'util/url',\n    'ui/feedback',\n    'ui/taskQueue/taskQueue',\n    'ui/taskQueueButton/standardButton'\n], function ($, _, __, hider, urlHelper, feedback, taskQueue, taskCreationButtonFactory) {\n    'use strict';\n\n    /**\n     * Controls the ProctorDelivery index page\n     *\n     * @type {Object}\n     */\n    return {\n        /**\n         * Entry point of the page\n         */\n        start : function start(){\n\n            var $header = $('header.section-header');\n            var $formContainer = $('.print-form');\n            var $reportContainer = $('.print-report');\n            var $form = $('form', $formContainer);\n            var $submitter = $('.form-submitter', $form);\n            var $containers = $('.main-container');\n            var taskCreationButton;\n\n            function switchContainer(purpose) {\n                hider.hide($containers);\n                hider.show($containers.filter('[data-purpose=\"' + purpose + '\"]'));\n            }\n\n            function refreshTree() {\n                $('.tree').trigger('refresh.taotree', [{\n                    uri : $header.data('select-node')\n                }]);\n            }\n\n            switchContainer('form');\n\n            taskCreationButton = taskCreationButtonFactory({\n                type : 'info',\n                icon : 'export',\n                title : __('Export Irregularities'),\n                label : __('Export'),\n                taskQueue : taskQueue,\n                taskCreationUrl : $form.prop('action'),\n                taskCreationData : function getTaskCreationData(){\n                    return $form.serializeArray();\n                },\n                taskReportContainer : $reportContainer\n            }).on('finished', function(result){\n                if (result.task\n                    && result.task.report\n                    && _.isArray(result.task.report.children)\n                    && result.task.report.children.length\n                    && result.task.report.children[0]) {\n                    if(result.task.report.children[0].data\n                        && result.task.report.children[0].data.uriResource){\n                        feedback().info(__('%s completed', result.task.taskLabel));\n                        refreshTree(result.task.report.children[0].data.uriResource);\n                    }else{\n                        this.displayReport(result.task.report.children[0], __('Error'));\n                    }\n                }\n            }).on('continue', function(){\n                refreshTree();\n            }).on('error', function(err){\n                //format and display error message to user\n                feedback().error(err);\n            }).render($submitter.closest('.form-toolbar'));\n\n            //replace the old submitter with the new one and apply its style\n            $submitter.replaceWith(taskCreationButton.getElement().css({float: 'right'}));\n        }\n\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/component/history/historyTable',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/datatable'\n], function ($, _, __, component) {\n    'use strict';\n\n    /**\n     * Some default config\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        sortBy: 'timestamp',\n        sortOrder: 'desc'\n    };\n\n    /**\n     * Renders the event details\n     * @param {String|Array} details\n     * @returns {String}\n     */\n    function renderDetails(details) {\n        if (_.isArray(details)) {\n            details = details.join('<br />');\n        }\n        return details;\n    }\n\n    /**\n     * Renders a history table\n     * @param {Object} config\n     * @param {String} config.service - The URL of the service providing the data\n     * @param {Object} [config.params] - A list of additional parameters to provide to the service\n     * @param {String} [config.sortBy] - The default sorted column\n     * @param {String} [config.sortOrder] - The default sort direction\n     * @param {Array} [config.tools] - A list of optional tools, using the datable format\n     * @param {Object} [data] - The first data set\n     * @returns {*}\n     */\n    function historyTableFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        // define some additional behavior\n        var historyTable = {\n            /**\n             * Refresh the table\n             * @param {Object} [params]\n             */\n            refresh: function refresh(params) {\n                var $element;\n\n                if (this.is('rendered')) {\n                    $element = this.getElement();\n                    if (params) {\n                        $element.datatable('options', {\n                            params: params\n                        });\n                    }\n                    $element.datatable('refresh');\n                } else {\n                    if (params) {\n                        initConfig.params = _.merge(initConfig.params, params);\n                    }\n                }\n            }\n        };\n\n        return component(historyTable)\n            .on('render', function() {\n                var self = this;\n                var tools = [{\n                    id: 'refresh',\n                    icon: 'reset',\n                    title: __('Refresh the page'),\n                    label: __('Refresh'),\n                    action: function() {\n                        self.refresh();\n                    }\n                }];\n                this.getElement()\n                    .on('query.datatable', function() {\n                        self.trigger('loading');\n                    })\n                    .on('load.datatable', function() {\n                        self.trigger('loaded');\n                    })\n                    .on('error.datatable', function (e, err) {\n                        self.trigger('error', err);\n                    })\n                    .datatable({\n                        url: initConfig.service,\n                        params: initConfig.params,\n                        sortby: initConfig.sortBy,\n                        sortorder: initConfig.sortOrder,\n                        status: {\n                            empty: __('No history to display!'),\n                            available: __('Available history'),\n                            loading: __('Loading')\n                        },\n                        selectable: !!(initConfig.tools && _.find(initConfig.tools, {massAction: true})),\n                        tools: tools.concat(initConfig.tools || []),\n                        model: [{\n                            id: 'date',\n                            label: __('Date'),\n                            sortable: true\n                        }, {\n                            id: 'role',\n                            label: __('Role'),\n                            sortable: true\n                        }, {\n                            id: 'actor',\n                            label: __('Actor'),\n                            sortable: true\n                        }, {\n                            id: 'event',\n                            label: __('Event'),\n                            sortable: true\n                        }, {\n                            id: 'details',\n                            label: __('Details'),\n                            transform: renderDetails\n                        }, {\n                            id: 'context',\n                            label: __('Context'),\n                            transform: renderDetails\n                        }]\n                    }, data);\n            })\n            .init(initConfig);\n    }\n\n    return historyTableFactory;\n});\n\n","\ndefine('tpl!taoProctoring/templates/reporting/index', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<h1>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h1>\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"content\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.title), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"panel\\\"></div>\\n    <div class=\\\"list clearfix\\\"></div>\\n</div>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Reporting/history',[\n    'lodash',\n    'i18n',\n    'util/url',\n    'controller/app',\n    'layout/loading-bar',\n    'ui/container',\n    'ui/button',\n    'ui/dateRange/dateRange',\n    'util/encode',\n    'util/locale',\n    'taoProctoring/component/proxy',\n    'taoProctoring/component/history/historyTable',\n    'tpl!taoProctoring/templates/reporting/index',\n    'moment',\n    'ui/datatable'\n], function (\n    _,\n    __,\n    urlHelper,\n    appController,\n    loadingBar,\n    containerFactory,\n    buttonFactory,\n    dateRangeFactory,\n    encode,\n    locale,\n    proxyFactory,\n    historyTableFactory,\n    indexTpl,\n    moment\n) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.session-history';\n\n    var serviceUrl = urlHelper.route('sessionHistory', 'Reporting', 'taoProctoring');\n    var sessionsUrl = urlHelper.route('history', 'Reporting', 'taoProctoring');\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring session history page\n     *\n     * @type {Object}\n     */\n    return {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var container = containerFactory().changeScope(cssScope).write(indexTpl());\n            var currentRoute = urlHelper.parse(window.location.href);\n            var context = currentRoute.query.context && decodeURIComponent(currentRoute.query.context);\n            var deliveryId = currentRoute.query.delivery && decodeURIComponent(currentRoute.query.delivery);\n            var sessions = decodeURIComponent(currentRoute.query.session).split(',');\n            var monitoringUrl = currentRoute.query.monitoring && decodeURIComponent(currentRoute.query.monitoring);\n            var dateFormat = locale.getDateTimeFormat().split(\" \")[0];\n\n            /**\n             * Transform date picker value to format recognized by datatable filter query\n             * @param {string} pickerDate\n             * @returns {string}\n             */\n            function transformDateQueryParam(pickerDate) {\n                if (pickerDate) {\n                    const dateObject = moment(pickerDate, dateFormat);\n                    if (dateObject.isValid()) {\n                        return dateObject.format('YYYY-MM-DD');\n                    }\n                }\n                return null;\n            }\n\n            appController\n                .on('set-referrer.history', function(route) {\n                    monitoringUrl = route;\n                })\n                .on('change.history', function() {\n                    appController.off('.history');\n                    container.destroy();\n                });\n\n            proxyFactory('ajax').init({\n                actions: {\n                    read: serviceUrl\n                }\n            }).then(function(proxyService) {\n                return proxyService.read({delivery : deliveryId, context: context, session: sessions}).then(function(data) {\n                    var detailedHistory = data.detailedHistory;\n                    var historyTable = historyTableFactory({\n                        tools: [{\n                            id: 'show-detailed-report',\n                            icon: 'insert-horizontal-line',\n                            title: __('Show detailed session history messages'),\n                            label: __('Show detailed report'),\n                            action: function() {\n                                var tool = _.find(historyTable.config.tools, {'id' : 'show-detailed-report'});\n\n                                historyTable.config.params.detailed = detailedHistory = !detailedHistory;\n                                tool.label = detailedHistory ? __('Show brief report') : __('Show detailed report');\n                                historyTable.refresh();\n                            }\n                        }],\n                        params: {detailed: detailedHistory, delivery : deliveryId, context: context, session: sessions},\n                        service: sessionsUrl,\n                        sortBy: data.sortBy,\n                        sortOrder: data.sortOrder\n                    }, data.set)\n                        .on('loading', function() {\n                            loadingBar.start();\n                        })\n                        .on('loaded', function() {\n                            loadingBar.stop();\n                        })\n                        .on('error',function(err){\n                            appController.onError(err);\n                        })\n                        .render(container.find('.list'));\n\n                    if (data.monitoringUrl) {\n                        monitoringUrl = data.monitoringUrl;\n                    }\n\n                    return new Promise(function(resolve, reject){\n                        dateRangeFactory(container.find('.panel'), {\n                            resetButton : {\n                                enable : false\n                            },\n                            applyButton : {\n                                enable : true,\n                                label  : __('Filter'),\n                                title  : __('Filter by the selected dates')\n                            },\n                            startPicker : {\n                                setup: 'date',\n                                format :  dateFormat,\n                                field : {\n                                    value : data.periodStart,\n                                    name : 'periodStart',\n                                }\n                            },\n                            endPicker : {\n                                setup: 'date',\n                                format : dateFormat,\n                                field : {\n                                    value : data.periodEnd,\n                                    name : 'periodEnd',\n                                }\n                            }\n                        })\n                        .on('ready', resolve)\n                        .on('error', reject)\n                        .on('submit reset', function () {\n\n                            historyTable.refresh({\n                                periodStart: transformDateQueryParam(this.getStart()),\n                                periodEnd: transformDateQueryParam(this.getEnd())\n                            });\n                        });\n                    })\n                    .then(function(){\n\n                        buttonFactory({\n                            id: 'back',\n                            type: 'info',\n                            label: __('Back to sessions'),\n                            cls: 'back-button',\n                            renderTo: container.find('.panel')\n                        }).on('click', function () {\n                            if (monitoringUrl) {\n                                appController.getRouter().redirect(monitoringUrl);\n                            } else {\n                                history.go(-1);\n                            }\n                        });\n                    });\n                });\n            }).catch(function(err) {\n                appController.onError(err);\n                loadingBar.stop();\n            });\n        }\n    };\n});\n\n","define('taoProctoring/controller/routes',{\n    'Reporting' : {\n        'actions' : {\n            'index' : 'controller/Reporting/history'\n        }\n    },\n    'Irregularity' : {\n        'actions' : {\n            'index' : 'controller/Irregularity/index'\n        }\n    },\n    'DeliverySelection' : {\n        'actions' : {\n            'index' : 'controller/Delivery/index'\n        }\n    },\n    'Monitor' : {\n        'actions' : {\n            'index' : 'controller/Delivery/monitoring'\n        }\n    },\n    'Tools' : {\n        'css': 'tools',\n        'actions' : {\n            'assessmentActivity' : 'controller/Tools/assessmentActivity'\n        }\n    }\n});\n\n","\ndefine('tpl!taoProctoring/component/activityMonitoring/userActivity/userActivityBlock', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"col-\";\n  if (helper = helpers.size) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.size); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" dashboard-block\\\">\\n        <span class=\\\"dashboard-block-number \";\n  if (helper = helpers.container) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.container); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n            \";\n  if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n        </span>\\n    <h3>\\n        <span class=\\\"icon icon-test-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\n        \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n    </h3>\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!taoProctoring/component/activityMonitoring/userActivity/userActivity', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};\n  var buffer = \"\", stack1, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    \";\n  stack1 = self.invokePartial(partials['ui-activity-widget-group'], 'ui-activity-widget-group', depth0, helpers, partials, data);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<div>\\n    \";\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\ndefine('taoProctoring/component/activityMonitoring/userActivity/userActivity',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'handlebars',\n    'tpl!taoProctoring/component/activityMonitoring/userActivity/userActivityBlock',\n    'tpl!taoProctoring/component/activityMonitoring/userActivity/userActivity'\n], function ($, _, __, component, Handlebars, groupTpl, componentTpl) {\n    'use strict';\n\n    /**\n     * Default options\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        activeProctors: {\n            container: 'active-proctors',\n            label: __('Active proctors'),\n            size: 4,\n            icon: 'taker',\n            value: 0\n        },\n        activeTestTakers: {\n            container: 'active-test-takers',\n            label: __('Active test-takers'),\n            size: 4,\n            icon: 'takers',\n            value: 0\n        }\n    };\n\n    Handlebars.registerPartial('ui-activity-widget-group', groupTpl);\n\n    /**\n     * Factory for component\n     *\n     * @param {Object} config\n     * @param {String} [config.<WidgetName>.container]\n     * @param {String} [config.<WidgetName>.label]\n     * @param {Number} [config.<WidgetName>.value]\n     * @param {Number} [config.<WidgetName>.size]\n     * @param {String} [config.<WidgetName>.icon]\n     * @param {jQuery} [config.renderTo] - Container of component\n     */\n    function userActivityFactory(config) {\n        config = config || {};\n\n        return component({\n            /**\n             * Update component variables\n             *\n             * @param {Object} data\n             * @param {Number} [data.activeProctors.value]\n             * @param {Number} [data.activeTestTakers.value]\n             */\n            update: function update(data) {\n                var metricsWidget;\n                _.merge(this.config, data);\n\n                for (metricsWidget in this.config) {\n                    if (this.config.hasOwnProperty(metricsWidget)) {\n                        $('.'+this.config[metricsWidget].container, this.getElement())\n                            .text(this.config[metricsWidget].value);\n                    }\n                }\n            }\n        }, _defaults)\n\n        .setTemplate(componentTpl)\n\n        .init(config);\n    }\n\n    return userActivityFactory;\n});\n\n","\ndefine('tpl!taoProctoring/component/activityMonitoring/currentAssessmentActivity/currentAssessmentActivity', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div>\\n    <div class=\\\"col-4 dashboard-block\\\">\\n        <h4>\\n            <span class=\\\"icon icon-play\\\"></span>\\n            \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.current)),stack1 == null || stack1 === false ? stack1 : stack1.label)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        </h4>\\n        <span class=\\\"dashboard-block-number \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.current)),stack1 == null || stack1 === false ? stack1 : stack1.container)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\n            \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.current)),stack1 == null || stack1 === false ? stack1 : stack1.value)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        </span>\\n    </div>\\n\\n    <div class=\\\"col-2 dashboard-block\\\">\\n        <h4>\\n            <span class=\\\"icon icon-play\\\"></span>\\n            \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.inProgress)),stack1 == null || stack1 === false ? stack1 : stack1.label)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        </h4>\\n        <span class=\\\"dashboard-block-number \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.inProgress)),stack1 == null || stack1 === false ? stack1 : stack1.container)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\n            \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.inProgress)),stack1 == null || stack1 === false ? stack1 : stack1.value)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        </span>\\n    </div>\\n\\n    <div class=\\\"col-2 dashboard-block\\\">\\n        <h4>\\n            <span class=\\\"icon icon-time\\\"></span>\\n            \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.awaiting)),stack1 == null || stack1 === false ? stack1 : stack1.label)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        </h4>\\n        <span class=\\\"dashboard-block-number \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.awaiting)),stack1 == null || stack1 === false ? stack1 : stack1.container)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\n            \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.awaiting)),stack1 == null || stack1 === false ? stack1 : stack1.value)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        </span>\\n    </div>\\n\\n    <div class=\\\"col-2 dashboard-block\\\">\\n        <h4>\\n            <span class=\\\"icon icon-continue\\\"></span>\\n            \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.authorized)),stack1 == null || stack1 === false ? stack1 : stack1.label)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        </h4>\\n        <span class=\\\"dashboard-block-number \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.authorized)),stack1 == null || stack1 === false ? stack1 : stack1.container)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\n            \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.authorized)),stack1 == null || stack1 === false ? stack1 : stack1.value)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        </span>\\n    </div>\\n\\n    <div class=\\\"col-2 dashboard-block\\\">\\n        <h4>\\n            <span class=\\\"icon icon-pause\\\"></span>\\n            \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.paused)),stack1 == null || stack1 === false ? stack1 : stack1.label)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        </h4>\\n        <span class=\\\"dashboard-block-number \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.paused)),stack1 == null || stack1 === false ? stack1 : stack1.container)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\n            \"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.assessments)),stack1 == null || stack1 === false ? stack1 : stack1.paused)),stack1 == null || stack1 === false ? stack1 : stack1.value)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n        </span>\\n    </div>\\n</div>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\ndefine('taoProctoring/component/activityMonitoring/currentAssessmentActivity/currentAssessmentActivity',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'tpl!taoProctoring/component/activityMonitoring/currentAssessmentActivity/currentAssessmentActivity'\n], function ($, _, __, component, tpl) {\n    'use strict';\n\n    /**\n     * Default options\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        assessments: {\n            awaiting: {\n                container: 'awaiting-assessments',\n                label: __('Awaiting'),\n                value: 0\n            },\n            authorized: {\n                container: 'authorized-but-not-started-assessments',\n                label: __('Authorized'),\n                value: 0\n            },\n            current: {\n                container: 'current-assessments',\n                label: __('Total Current Assessments'),\n                value: 0,\n            },\n            inProgress: {\n                container: 'in-progress-assessments',\n                label: __('In Progress'),\n                value: 0\n            },\n            paused: {\n                container: 'paused-assessments',\n                label: __('Paused'),\n                value: 0\n            }\n        }\n    };\n\n    /**\n     * Factory for component\n     *\n     * @param {Object} [config]\n     * @param {String} [config.assessments.awaiting.container]\n     * @param {String} [config.assessments.awaiting.label]\n     * @param {Number} [config.assessments.awaiting.value]\n     * @param {String} [config.assessments.authorized.container]\n     * @param {String} [config.assessments.authorized.label]\n     * @param {Number} [config.assessments.authorized.value]\n     * @param {String} [config.assessments.current.container]\n     * @param {String} [config.assessments.current.label]\n     * @param {Number} [config.assessments.current.value]\n     * @param {String} [config.assessments.inProgress.container]\n     * @param {String} [config.assessments.inProgress.label]\n     * @param {Number} [config.assessments.inProgress.value]\n     * @param {String} [config.assessments.paused.container]\n     * @param {String} [config.assessments.paused.label]\n     * @param {Number} [config.assessments.paused.value]\n     * @param {jQuery} [config.renderTo] - Container of component\n     */\n    function currentAssessmentActivityFactory(config) {\n        config = config || {};\n\n        return component({\n            /**\n             * Update component variables\n             *\n             * @param {Object} assessments\n             * @param {Number} [assessments.awaiting.value]\n             * @param {Number} [assessments.authorized.value]\n             * @param {Number} [assessments.current.value]\n             * @param {Number} [assessments.inProgress.value]\n             * @param {Number} [assessments.paused.value]\n             */\n            update: function update(data) {\n                // Update the component config values\n                _.merge(this.config.assessments, data);\n\n                // Update the template variables\n                _.each(this.config.assessments, function(val) {\n                    $('.' + val.container, this.getElement())\n                    .text(val.value);\n                }, this);\n            }\n        }, _defaults)\n\n        .setTemplate(tpl)\n\n        .init(config);\n    }\n\n    return currentAssessmentActivityFactory;\n});\n\n","\ndefine('tpl!taoProctoring/component/activityMonitoring/progressbar', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"js-completed-assessments-refresh-bar refresh-bar\\\">\\n    <div class=\\\"js-refresh-bar-progress refresh-bar-progress\\\"></div>\\n</div>\";\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Aleh Hutnikau <hutnikau@1pt.com>\n */\ndefine('taoProctoring/component/activityMonitoring/activityGraph',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'util/url',\n    'c3',\n    'tpl!taoProctoring/component/activityMonitoring/progressbar',\n    'core/polling'\n], function ($, _, __, component, url, c3, progressbarTpl, pollingFactory) {\n    'use strict';\n\n    /**\n     * Some default config\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        autoRefresh : 0,\n        autoRefreshBar : false,\n        transition: {\n            duration: 3000\n        },\n        graphConfig : {\n            padding: {\n                bottom: 0,\n                left: 35\n            },\n            data: {\n                x: 'time',\n                xFormat: '%Y-%m-%d %H:%M:%S',\n                mimeType: 'json',\n                type: 'bar'\n            },\n            axis: {\n                x: {\n                    type: 'timeseries',\n                    tick: {\n                        format: '%H:%M'\n                    },\n                    label: {\n                        position: 'bottom center'\n                    }\n                },\n                y: {\n                    label: {\n                        position: 'top'\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * @param {jQuery} $refreshProgress\n     * @param duration\n     */\n    function runRefreshProgressBar($refreshProgress, duration) {\n        duration = duration / 1000;\n        $refreshProgress.css({\n            '-webkit-transition': 'width 0s',\n            '-moz-transition': 'width 0s',\n            '-o-transition': 'width 0s',\n            'transition': 'width 0s',\n            'width': '0%'\n        });\n        //hack to refresh width\n        $refreshProgress.hide().show();\n        $refreshProgress.css({\n            '-webkit-transition': 'width ' + duration + 's linear',\n            '-moz-transition': 'width ' + duration + 's linear',\n            '-o-transition': 'width ' + duration + 's linear',\n            'transition': 'width ' + duration + 's linear',\n            'width': '100%'\n        });\n    }\n\n    /**\n     * Creates a dates range with date pickers\n     *\n     * @param {Object} config\n     * @param {String} [config.graphConfig] - configuration of c3 chart\n     * @param {String} [config.autoRefresh] - interval of auto refresh\n     * @param {String} [config.autoRefreshBar] - show auto refresh bar\n     */\n    function activityGraphFactory(config) {\n        var initConfig = _.merge({}, _defaults, config);\n        var chart;\n        var $refreshProgress;\n        var $progressbar;\n        var polling;\n        var activityGraph = {\n            /**\n             * Refresh the graph\n             * @param {Object} newConfig\n             */\n            refresh: function refresh(newConfig) {\n                if (chart) {\n                    initConfig = _.merge({}, initConfig, newConfig);\n                    //there is no way to update graph with new config\n                    chart.internal.config.axis_x_tick_format = initConfig.graphConfig.axis.x.tick.format;\n                    chart.axis.labels({\n                        x: initConfig.graphConfig.axis.x.label.text\n                    });\n                    chart.load(initConfig.graphConfig.data);\n                }\n            }\n        };\n\n        return component(activityGraph)\n            .on('render', function() {\n                chart = c3.generate(initConfig.graphConfig);\n                if (initConfig.autoRefresh) {\n                    $progressbar = $(progressbarTpl());\n                    $(initConfig.graphConfig.bindto).after($progressbar);\n                    $refreshProgress = $progressbar.find('.js-refresh-bar-progress');\n\n                    if (initConfig.autoRefreshBar) {\n                        runRefreshProgressBar($refreshProgress, initConfig.autoRefresh);\n                    }\n\n                    polling = pollingFactory({\n                        action: function() {\n                            chart.load(initConfig.graphConfig.data);\n                            if (initConfig.autoRefreshBar) {\n                                runRefreshProgressBar($refreshProgress, initConfig.autoRefresh);\n                            }\n                        },\n                        interval: initConfig.autoRefresh,\n                        autoStart: true\n                    });\n                }\n            })\n            .on('destroy', function() {\n                if (polling) {\n                    polling.stop();\n                }\n            })\n            .init(initConfig);\n    }\n\n    return activityGraphFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\ndefine('taoProctoring/component/activityMonitoring/deliveriesList/deliveriesList',[\n    'jquery',\n    'i18n',\n    'util/url',\n    'ui/component',\n    'util/locale',\n    'ui/datatable'\n], function ($, __, url, component, locale) {\n    'use strict';\n\n    /**\n     * Default options\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        model: [\n            {\n                id: 'label',\n                label: __('Delivery'),\n                sortable : true\n            },\n            {\n                id: __('Awaiting'),\n                label: __('Awaiting'),\n                sortable : true,\n                transform: function(value) {return value.toString();}\n            },\n            {\n                id: __('Authorized'),\n                label: __('Authorized'),\n                sortable : true,\n                transform: function(value) {return value.toString();}\n            },\n            {\n                id: __('Paused'),\n                label: __('Paused'),\n                sortable : true,\n                transform: function(value) {return value.toString();}\n            },\n            {\n                id: __('Active'),\n                label: __('Active'),\n                sortable : true,\n                transform: function(value) {return value.toString();}\n            },\n            {\n                id: __('Terminated'),\n                label: __('Terminated'),\n                sortable : true,\n                transform: function(value) {return value.toString();}\n            },\n            {\n                id: __('Canceled'),\n                label: __('Canceled'),\n                sortable : true,\n                transform: function(value) {return value.toString();}\n            },\n            {\n                id: __('Finished'),\n                label: __('Finished'),\n                sortable : true,\n                transform: function(value) {return value.toString();}\n            },\n            {\n                id: __('Last launch'),\n                label: __('Last launch'),\n                sortable : true,\n                transform: function(value) {\n                    return locale.formatDateTime(value);\n                }\n            }\n        ]\n    };\n\n    /**\n     * Factory for component\n     *\n     * @param {Object} [config]\n     * @param {jQuery} [config.renderTo] - Container of component\n     */\n    function deliveriesListFactory(config) {\n        config = config || {};\n\n        return component({\n            /**\n             * Update component datatable\n             */\n            update: function update() {\n                this.$datatable.datatable('refresh');\n            }\n        }, _defaults)\n\n        .on('render', function () {\n            this.$datatable = this.getElement().datatable({\n                url:                      url.route('deliveriesActivityData', 'Tools', 'taoProctoring'),\n                filter:                   false,\n                model:                    this.config.model,\n                paginationStrategyTop:    'none',\n                paginationStrategyBottom: 'simple',\n                rows:                     10,\n                selectable:               true,\n                sortorder:                'asc',\n                sortby:                   'label'\n            }, this.config.model);\n        })\n        .init(config);\n    }\n\n    return deliveriesListFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Aleh Hutnikau, <hutnikau@1pt.com>\n */\ndefine('taoProctoring/controller/Tools/assessmentActivity',[\n    'jquery',\n    'd3',\n    'lodash',\n    'i18n',\n    'helpers',\n    'util/url',\n    'core/dataProvider/request',\n    'core/polling',\n    'ui/feedback',\n    'ui/cascadingComboBox',\n    'ui/bulkActionPopup',\n    'taoProctoring/component/activityMonitoring/userActivity/userActivity',\n    'taoProctoring/component/activityMonitoring/currentAssessmentActivity/currentAssessmentActivity',\n    'taoProctoring/component/activityMonitoring/activityGraph',\n    'taoProctoring/component/activityMonitoring/deliveriesList/deliveriesList'\n], function(\n    $,\n    d3,\n    _,\n    __,\n    helpers,\n    url,\n    request,\n    polling,\n    feedback,\n    cascadingComboBox,\n    bulkActionPopup,\n    userActivityFactory,\n    currentAssessmentActivityFactory,\n    activityGraphFactory,\n    deliveriesListFactory\n){\n    'use strict';\n\n    var pauseMsg = __('Warning, you are about to pause all in progress tests. All test takers will be paused on or before the next heartbeat. Please provide a reason for this action.');\n\n    function doPause(reason) {\n        request(\n            url.route('pauseActiveExecutions', 'Tools', 'taoProctoring'),\n            { reason: reason },\n            'POST'\n        )\n        .then(function (data) {\n            helpers.loaded();\n            feedback().success(data.message);\n        })\n        .catch(function (err) {\n            helpers.loaded();\n            feedback().error(err.message);\n        });\n    }\n\n    return {\n        start: function () {\n            var $container = $('.activity-dashboard');\n            var activityGraph;\n            var assessmentActivityAutoRefreshInterval;\n            var completedAssessmentsAutoRefreshInterval;\n            var config;\n            var currentAssessmentActivity;\n            var deliveriesList;\n            var pauseReasonCategories;\n            var poll;\n            var userActivity;\n\n            config = $container.data('config');\n            assessmentActivityAutoRefreshInterval = parseInt(config.assessment_activity_auto_refresh) * 1000;\n            completedAssessmentsAutoRefreshInterval = parseInt(config.completed_assessments_auto_refresh) * 1000;\n\n            // User Activity\n            userActivity = userActivityFactory(config.userActivityWidgets)\n            .render($('.user-activity', $container));\n\n            // Current Assessment Activity\n            currentAssessmentActivity = currentAssessmentActivityFactory()\n            .render($('.assessment-activity', $container));\n\n            // Completed Assessment Activity\n            activityGraph = activityGraphFactory({\n                autoRefresh: Math.max(completedAssessmentsAutoRefreshInterval, assessmentActivityAutoRefreshInterval),\n                autoRefreshBar: true,\n                graphConfig: {\n                    bindto: $('.js-completed-assessments', $container).selector,\n                    data: {\n                        url: url.route('completedAssessmentsData', 'Tools', 'taoProctoring')\n                    },\n                    axis: {\n                        x: {\n                            label: {\n                                text: __('Hours'),\n                            }\n                        },\n                        y: {\n                            label: {\n                                text: __('Completed tests'),\n                            },\n                            tick: { format: d3.format('d') },\n                        }\n                    },\n                    tooltip: {\n                        format: {\n                            name: function () {\n                                return __('Completed');\n                            }\n                        }\n                    },\n                    legend: {\n                        show: false\n                    }\n                }\n            })\n            .render();\n\n            $('.js-activity-chart-interval', $container)\n            .on('change', function () {\n                var interval = $(this).val();\n                activityGraph.refresh({\n                    graphConfig : {\n                        data : {\n                            url: url.route('completedAssessmentsData', 'Tools', 'taoProctoring', { 'interval' : interval })\n                        },\n                        axis : {\n                            x : {\n                                tick : {\n                                    format: interval === 'day' ? '%H:%M' : '%m-%d'\n                                },\n                                label : {\n                                    text:  interval === 'day' ? __('Hours') : __('Days')\n                                }\n                            }\n                        }\n                    }\n                });\n            });\n\n            // Deliveries List\n            deliveriesList = deliveriesListFactory()\n            .render($('.js-delivery-list'));\n\n            // Refresh\n            poll = polling({\n                action: function () {\n                    request(url.route('assessmentActivityData', 'Tools', 'taoProctoring'))\n                    .then(function (data) {\n                        var uaData = {};\n                        if (data && data.group_user_activity) {\n                            _.forEach(data.group_user_activity, function (v, k) {\n                                    uaData[$.camelCase(k.replace(/_/g, '-'))] = {value: v};\n                                }\n                            );\n                        }\n                        userActivity.update(uaData);\n\n                        currentAssessmentActivity.update({\n                            awaiting   : { value: data && data.awaiting_assessments },\n                            authorized : { value: data && data.authorized_but_not_started_assessments },\n                            current    : { value: data && data.total_current_assessments },\n                            inProgress : { value: data && data.in_progress_assessments },\n                            paused     : { value: data && data.paused_assessments }\n                        });\n                        deliveriesList.update();\n                    })\n                    .catch(function (err) {\n                        feedback().error(err.message);\n                        poll.stop();\n                    });\n                }\n            })\n            .next()\n            .stop();\n\n            if (assessmentActivityAutoRefreshInterval) {\n                poll.setInterval(assessmentActivityAutoRefreshInterval);\n                poll.start();\n            }\n\n\n            // Pause\n            pauseReasonCategories = $('.js-pause-active-executions-container').data('reasoncategories');\n\n            $('.js-pause', $container)\n            .on('click', function() {\n                bulkActionPopup({\n                    renderTo: $('.js-pause-active-executions-container', $container),\n                    actionName: pauseMsg,\n                    reason: true,\n                    allowedResources: [],\n                    reasonRequired: true,\n                    categoriesSelector: cascadingComboBox(pauseReasonCategories['pause'])\n                })\n                .on('ok', function(reason) {\n                    doPause(reason);\n                });\n            });\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/helper/textConverter',[\n    'jquery',\n    'lodash',\n    'core/format',\n    'core/promise',\n    'util/url'\n], function ($, _, format, Promise, url) {\n    'use strict';\n\n    /**\n     * The loaded labels\n     * @type {Object}\n     */\n    var labels = null;\n\n    /**\n     * The wrapper that resolve the labels from the loaded list\n     * @type {Object}\n     */\n    var proctoringLabels = {\n        /**\n         * Proctoring translation method.\n         *\n         * @param {String} message should be the string in the default language (usually english) used as the key in the gettext translations\n         * @returns {String} translated message\n         */\n        get: function get(message) {\n            if (labels[message] == undefined) {\n                console.log(message);\n            }\n            var localized = !labels[message] ? message : labels[message];\n\n            if (arguments.length > 1) {\n                arguments[0] = localized;\n                localized = format.apply(null, arguments);\n            }\n\n            return localized;\n        }\n    };\n\n    /**\n     * The promise that is pending to load the labels\n     * @type {Promise}\n     */\n    var pendingPromise;\n\n    /**\n     * Gets the API that access to the proctoring labels\n     * @returns {Promise}\n     */\n    function proctoringLabelsLoader() {\n        if (!pendingPromise) {\n            pendingPromise = new Promise(function (resolve, reject) {\n                $.ajax({\n                    url: url.route('getAll', 'TextConverter', 'taoProctoring'),\n                    type: 'POST',\n                    dataType: 'json'\n                })\n                    .done(function (data) {\n                        labels = data.translations;\n                        resolve(proctoringLabels);\n                    })\n                    .fail(reject);\n            });\n        }\n\n        return pendingPromise;\n    }\n\n    return proctoringLabelsLoader;\n});\n\n","\ndefine(\"taoProctoring/loader/taoProctoring.bundle\", function(){});\n","window.bundles = (window.bundles || []).concat([\"taoQtiItem/loader/taoQtiItem.min\",\"taoItems/loader/taoItems.min\",\"taoQtiTest/loader/taoQtiTest.min\"]);\n"]}